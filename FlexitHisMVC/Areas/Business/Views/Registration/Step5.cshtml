
@{
    Layout = "~/Areas/Business/Views/Shared/_BusinessLayout.cshtml";
}

@model Medicloud.ViewModels.CreateOrganizationVM


<div class="">
    <div class="row  text-center justify-content-center ">
        <div class="">
            <div class="card-header   align-items-center">
                <div class="text-center flex-grow-1">
                    <h1>Səyahət haqqı</h1>
                </div>
            </div>
            <form id="step5Form" method="post" asp-action="step6" asp-controller="registration" asp-area="Business" novalidate>
                <input type="hidden" asp-for="id" />
                <input type="hidden" asp-for="TravelId" />
                <div class="card-body ">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-floating">
                                <select class="form-select" id="priceType" name="TravelPriceType" asp-for="TravelPriceType" aria-label="Floating label select example" required>
                                    <option value="" selected>Seçin</option>
                                    <option value="1">Sabit</option>
                                    <option value="2">Dəyişir</option>
                                    <option value="3">Pulsuz</option>
                                    <option value="4">Başlayaraq</option>
                                </select>
                                <label for="floatingSelect">Yol haqqı</label>
                                <div class="invalid-feedback">
                                    Bu sahə doldurulmalıdır
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-floating mb-3">

                                <input type="number" value="@Model.TravelPrice.ToString("0.00")" name="TravelPrice" class="form-control" step="0.01" min="0.01" placeholder="9.99" required />
                                <label for="priceInput">Qiymət(AZN)</label>
                                <div class="invalid-feedback">
                                    Bu sahə doldurulmalıdır
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="form-floating">
                            <select class="form-select" id="distance" asp-for="TravelDistance" aria-label="Floating label select example" required>
                                <option selected value="1">1</option>
                                <option value="5">5</option>
                                <option value="10">10</option>
                                <option value="15">15</option>
                                <option value="20">20</option>
                            </select>
                            <label for="floatingSelect">Maksimum məsafə(km)</label>
                            <div class="invalid-feedback">
                                Bu sahə doldurulmalıdır
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div id="map" style="height: 400px;"></div>

                    </div>
                </div>
                <div class="mb-3 mb-0 d-flex justify-content-around align-items-center">
                    <a class="btn btn-sm" asp-action="Step4" asp-route-organizationId="@Model.id" asp-area="Business">
                        <svg width="32px" height="32px" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" fill="#737373">
                            <path fill="#737373" d="M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z"></path>
                            <path fill="#737373" d="m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z"></path>
                        </svg>
                    </a>
                    <button class="btn btn-primary" type="submit" id="nextButton"> Növbəti</button>
                </div>

            </form>
        </div>
    </div>
</div>


<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>

<script>
    $(document).ready(function () {

        togglePriceInput();


        $('#priceType').change(function () {
            togglePriceInput();
        });


        function togglePriceInput() {
            var priceType = $('#priceType').val(); 
            var travelPrice ='@Model.TravelPrice';
            
            if (priceType == "2" || priceType == "3" || priceType == "") {

                $('input[name="TravelPrice"]').prop('disabled', true).val('0.00');
            } else {

                $('input[name="TravelPrice"]').prop('disabled', false).val(travelPrice);
            }
        }
    });

    var selectedPlace = ['@Model.latitude', '@Model.longitude'];

    var map = L.map('map').setView(selectedPlace,12);


    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

    var marker = L.marker(selectedPlace).addTo(map);
    marker.bindPopup('@Model.OrgAddress').openPopup();


    var currentMarker = marker;
    var currentCircle;
    map.on('click', function (e) {
        var lat = e.latlng.lat;
        var lng = e.latlng.lng;
        var apiUrl = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json`;

        fetch(apiUrl)
            .then(response => response.json())
            .then(data => {
                var address = data.display_name;
                if (currentMarker) {
                    map.removeLayer(currentMarker);
                }
                currentMarker = L.marker([lat, lng]).addTo(map);
                currentMarker.bindPopup(address).openPopup();

                currentMarker.bindPopup(`${address}`).openPopup();
            })
            .catch(error => {
                console.error("Adres alınırken bir hata oluştu: ", error);
            });
    });


    $('#distance').change(function () {
        calculateDistance($(this).val())
    });

    function calculateDistance(value) {
        if (currentMarker) {
            var selectedDistance = parseInt(value);
            var radius = selectedDistance * 1000;

            if (currentCircle) {
                map.removeLayer(currentCircle);
            }

            currentCircle = L.circle([currentMarker.getLatLng().lat, currentMarker.getLatLng().lng], {
                color: 'blue',
                fillColor: '#30f',
                fillOpacity: 0.2,
                radius: radius
            }).addTo(map);


            currentMarker.bindPopup(`Məsafə: ${radius / 1000} km`).openPopup();
            adjustZoomLevel(selectedDistance);
        }

    }
    calculateDistance($('#distance').val())

    function adjustZoomLevel(distance) {
        // Mesafeye göre zoom seviyesini hesapla
        var zoomLevel;

        if (distance == 1) {
            zoomLevel = 14;
        } else if (distance == 5) {
            zoomLevel = 12;
        } else if (distance < 15) {
            zoomLevel = 11;
        }
        else {
            zoomLevel = 10;
        }

        // Harita zoom seviyesini ayarla
        map.setZoom(zoomLevel);
    }

    $('#step5Form').on('submit', function (event) {
        event.preventDefault(); 

        var form = $(this)[0];
        if (!form.checkValidity())
            form.classList.add('was-validated');
        else {

            $(this).submit();
        }
    });

</script>
