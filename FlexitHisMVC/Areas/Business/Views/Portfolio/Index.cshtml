@model Medicloud.WebUI.Areas.Business.ViewModels.PortfolioViewModel
<div class="px-2">

    <div class="row">
        <div class="col-md-6">
            <div class="d-flex align-items-center">
                <a class="btn btn-sm ps-0" asp-action="Index" asp-controller="Profile" asp-route-organizationId="" asp-area="Business">
                    <svg width="32px" height="32px" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" fill="#737373">
                        <path fill="#737373" d="M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z"></path>
                        <path fill="#737373" d="m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z"></path>
                    </svg>
                </a>
                <h2 class="ms-2 text-muted">Portfel</h2>
            </div>

            <div>
                <div class="mb-3">
                    <p>Bacarıqlarınızı nümayiş etdirmək və özünüzü digərlərindən fərqləndirmək üçün Portfelinizdən istifadə edin.</p>

                    <form method="post" enctype="multipart/form-data" asp-controller="Portfolio" asp-action="AddPortfolioPhoto" id="addPortfolioForm">

                        <div class="mt-sm-0 mt-3 text-sm-end">
                            <input type="file" id="portfolioPhoto" name="photo" accept="image/*" class="d-none">
                            <input type="hidden" id="" name="organizationId" value="@Model.organizationId">
                        </div>
                    </form>
                    <button id="addPortfolioBtn" class="btn border">
                        + Əlavə et
                    </button>
                </div>
                @if (Model.portfolios != null)
                {
                    <div class="row">
                        @foreach (var item in Model.portfolios)
                        {
                            <div class="col-3 mb-3 portfolio-item" data-description="@item.description" data-item-id="@item.id" data-comments="@Json.Serialize(item.Comments)">
                                <img src="@Url.Action("GetImage", "File", new {area="", id=item.fileId})" style="object-fit:cover; height:120px; cursor:pointer;" data-item-id="@item.id" alt="" class="img-fluid w-100 cursor-pointer img-item multiple border">
                            </div>
                        }
                    </div>
                }


            </div>
        </div> <!-- end col-->
    </div>
    <!-- end row -->
    <!-- end row -->

</div> <!-- container -->



@await Component.InvokeAsync("PhotoSave")
@await Component.InvokeAsync("PortfolioView")


<div class="modal fade" id="actionModal" tabindex="-1" aria-labelledby="actionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content d-flex flex-column">
            @*<div class="modal-header">
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>*@
            <div class="modal-body  text-center">
                <div class="modal-header">
                    <h5 id="actionModalTitle"></h5>
                </div>
                <div class="mb-3">
                    <button id="deleteButton" class="btn btn-danger w-100">Sil</button>
                </div>
                <div class="mb-3">
                    <button class="btn btn-outline-dark w-100" data-bs-dismiss="modal" aria-label="Close">Ləğv et</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">

    <!-- Cropper.js JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script src="~/js/photoSave.js"></script>
    <script>

        $('#addPortfolioBtn').on('click', function () {
            $('#portfolioPhoto').click();
        });

        createFileUploadInstance('portfolioPhoto', 'addPortfolioForm', 'portfolioPhoto');



        //$('.portfolio-item').on('click', function () {

        //    if (!$(this).attr('data-src')) {
        //        return;
        //    }
        //    var selectedImages = [];
        //    var modalTitle = '';
        //    var totalImages = 0;



        //    selectedImages.forEach(function (image, index) {
        //        var activeClass = index === 0 ? 'active' : '';
        //        var itemIdContent = image.itemId ? `data-item-id=${image.itemId}` : ''
        //        $('#carouselExample .carousel-inner').append(
        //            '<div class="carousel-item ' + activeClass + '">' +
        //            '<img src="' + image.src + '" class="d-block mx-auto" style="height:80vh;" alt="Image ' + (index + 1) + '" ' + itemIdContent + '>' +
        //            '</div>'
        //        );
        //    });

        //    if (selectedImages.length === 1) {
        //        $('#carouselExample .carousel-control-prev, #carouselExample .carousel-control-next').hide();
        //    } else {
        //        $('#carouselExample .carousel-control-prev, #carouselExample .carousel-control-next').show();
        //    }


        //    //
        //    $('#portfolioViewModal').modal('show');

        //    // Carousel kaydırıldığında aktif resmin ID'sini modal başlığında güncelle
        //    $('#carouselExample').on('slid.bs.carousel', function () {
        //        var currentIndex = $('#carouselExample .carousel-item.active').index() + 1;
        //        $('#portfolioViewModalLabel').text(' ' + currentIndex + ' / ' + totalImages);
        //    });
        //});

        var portfolioData = [];
        $('.portfolio-item').each(function () {
            var itemId = $(this).attr('data-item-id');
            var description = $(this).attr('data-description');
            var imgSrc = $(this).find('img').attr('src');
            var comments = JSON.parse($(this).attr('data-comments'));

            // Verileri portfolioData dizisine ekle
            portfolioData.push({
                itemId: itemId,
                imgSrc: imgSrc,
                comments: comments
            });

            // Carousel'e her bir resmi ekle
            var activeClass = portfolioData.length === 1 ? 'active' : ''; // İlk item aktif olacak
            var itemIdContent = itemId ? `data-item-id=${itemId}` : '';
            var descriptionContent = description ? `<div class="carousel-caption d-none d-md-inline text-white" style="background-color: rgba(0, 0, 0, 0.3);">
                                            <span>${description}</span>
                                        </div>` : '';


            //$('#carouselExample .carousel-inner').append(
            //    '<div class="carousel-item ' + activeClass + '">' +
            //    '<img src="' + imgSrc + '" class="d-block mx-auto mt-3" style="height:80vh;" alt="Image ' + portfolioData.length + '" ' + itemIdContent + '>' +
            //    '<div class="carousel-caption d-none d-md-inline text-white" style=" background-color: rgba(0, 0, 0, 0.3);">' +
            //    '   <span>Description</span>' +
            //    '</div>' +
            //    '</div>'
            //);
            $('#carouselExample .carousel-inner').append(
                `<div ${itemIdContent} class="carousel-item  ${activeClass}">
                <img src="${imgSrc}" class="d-block mx-auto mt-3 w-75" style="height:80vh;" alt="Image '${ portfolioData.length}'" ' ${itemIdContent}>
                ${descriptionContent}
                </div>`
            );
        });

        // Modalda yorumları da ekle
        //portfolioData.forEach(function (data) {
        //    $('#commentsContainer').append(
        //        '<div class="comment" data-item-id="' + data.itemId + '"><strong>' + data.comments.author + ':</strong> ' + data.comments.text + '</div>'
        //    );
        //});

        // Her portfolio item'ına tıklama olayını ekle
        $('.portfolio-item').on('click', function () {
            var clickedItemId = $(this).attr('data-item-id');

            // Carousel içinde tıklanan item'ı bulup aktif yap
            var itemIndex = portfolioData.findIndex(function (item) {
                return item.itemId === clickedItemId;
            });

            //// Carousel'i güncelle
            //$('#carouselExample').carousel(itemIndex);

            $('#carouselExample').carousel('pause'); // Kaymayı durdur

            // Tıklanan öğeyi aktif yap
            $('#carouselExample .carousel-item').removeClass('active');
            $('#carouselExample .carousel-item').eq(itemIndex).addClass('active');

            // Yorumları temizle ve sadece tıklanan item'a ait yorumları ekle
            var clickedItem = portfolioData[itemIndex];
            fetchComments(clickedItemId);
           @*$.ajax({
                url :'@Url.Action("GetPortfolioComments", "Comment", new { area = "", id = "__id__" })'.replace('__id__', clickedItemId),
                success: function (result) {
                    console.log(result)
                    $('#commentCount').text(result.length)
                    result.forEach(function (comment) {
                        let commentHtml =
                            `<div class="comment mt-3 p-2 border-bottom" id="comment-${comment.id}">
                                 <div class="d-flex">
                                     <div class="d-flex flex-column justify-content-center align-items-center flex-shrink-0 me-3 rounded-pill"
                                          style="width: 50px; height: 50px; background-color: #E9ECEF;">
                                         <h6 class="text-dark mb-0">${comment.userName.charAt(0).toUpperCase()}</h6>
                                     </div>
                                     <div class="flex-grow-1 text-start">
                                         <h6 class="text-dark mb-0">${comment.userName}</h6>
                                         <div class="text-muted small">
                                             <span>${formatCustomDateTime(comment.cDate)}</span>
                                         </div>
                                     </div>
                                     <div class="dropdown">
                                         <button class="btn btn-sm" data-bs-toggle="dropdown" aria-expanded="false">...</button>
                                             <ul class="dropdown-menu p-2">
                                                <li><button class="btn w-100 btn-light mb-2 replyComment" data-comment-id="${comment.id}" data-author-name="${comment.userName}" >Cavabla</button></li>
                                                ${comment.isAuthor ? `
                                                <li><button class="btn w-100 text-nowrap btn-primary mb-2 editComment" data-comment-id="${comment.id}">Redaktə et</button></li>
                                                <li><button  class="btn w-100 text-nowrap btn-danger deleteComment" data-comment-id="${comment.id}">Sil</button></li>
                                                ` : ''}
                                            </ul>
                                     </div>
                                 </div>
                                 <span class="text-muted small">${comment.description}</span>
                                 <div class="replies-container d-none" id="replies-${comment.id}" >
                                 </div>

                                 ${comment.replies && comment.replies.length > 0 ? `
                                 <button class="btn btn-sm btn-link toggle-replies" data-target="#replies-${comment.id}">
                                     <i class="bi bi-arrow-down-circle"></i> Cavabları göstər
                                 </button>` : ''}
                                   </div>`;

                            $('#commentsContainer').append(commentHtml);
                            if (comment.replies && comment.replies.length > 0) {
                                comment.replies.forEach(function (reply) {
                                    let replyHtml = `
                                         <div class="reply mt-2 ms-4 p-2 border-bottom">
                                             <div class="d-flex">
                                                 <div class="d-flex flex-column justify-content-center align-items-center flex-shrink-0 me-3 rounded-pill"
                                                      style="width: 40px; height: 40px; background-color: #E9ECEF;">
                                                     <h6 class="text-dark mb-0">${reply.userName.charAt(0).toUpperCase()}</h6>
                                                 </div>
                                                 <div class="flex-grow-1 text-start">
                                                     <h6 class="text-dark mb-0">${reply.userName}</h6>
                                                     <div class="text-muted small">
                                                         <span>${formatCustomDateTime(reply.cDate)}</span>
                                                     </div>
                                                 </div>
                                             </div>
                                             <span class="text-muted small">${reply.description}</span>
                                         </div>
                                        `;

                                    $(`#replies-${comment.id}`).append(replyHtml);
                                });
                            }
                    });
                },
                error: function (e) {
                    hideLoading();
                    console.log(e)

                }
            });*@


            $('#portfolioViewModal').modal('show');
        });


        function fetchComments(itemId) {
            $('#commentsContainer').empty();
        $.ajax({
            url: '@Url.Action("GetPortfolioComments", "Comment", new { area = "", id = "__id__" })'.replace('__id__', itemId),
            success: function (result) {
                console.log(result);
                $('#commentCount').text(result.length);
                result.forEach(function (comment) {
                    let commentHtml =
                        `<div class="comment mt-3 p-2 border-bottom" id="comment-${comment.id}">
                            <div class="d-flex">
                                <div class="d-flex flex-column justify-content-center align-items-center flex-shrink-0 me-3 rounded-pill"
                                    style="width: 50px; height: 50px; background-color: #E9ECEF;">
                                    <h6 class="text-dark mb-0">${comment.userName.charAt(0).toUpperCase()}</h6>
                                </div>
                                <div class="flex-grow-1 text-start">
                                    <h6 class="text-dark mb-0">${comment.userName}</h6>
                                    <div class="text-muted small">
                                        <span>${formatCustomDateTime(comment.cDate)}</span>
                                    </div>
                                </div>
                                <div class="dropdown">
                                    <button class="btn btn-sm" data-bs-toggle="dropdown" aria-expanded="false">...</button>
                                    <ul class="dropdown-menu p-2">
                                        <li><button class="btn w-100 btn-light mb-2 replyComment" data-comment-id="${comment.id}" data-author-name="${comment.userName}">Cavabla</button></li>
                                        ${comment.isAuthor ? `
                                        <li><button class="btn w-100 text-nowrap btn-primary mb-2 editComment" data-comment-id="${comment.id}">Redaktə et</button></li>
                                        <li><button class="btn w-100 text-nowrap btn-danger deleteComment" data-comment-id="${comment.id}">Sil</button></li>
                                        ` : ''}
                                    </ul>
                                </div>
                            </div>
                            <span class="text-muted small">${comment.description}</span>
                            <div class="replies-container d-none" id="replies-${comment.id}">
                            </div>

                            ${comment.replies && comment.replies.length > 0 ? `
                            <button class="btn btn-sm btn-link toggle-replies" data-target="#replies-${comment.id}">
                                <i class="bi bi-arrow-down-circle"></i> Cavabları göstər
                            </button>` : ''}
                        </div>`;

                    $('#commentsContainer').append(commentHtml);
                    if (comment.replies && comment.replies.length > 0) {
                        comment.replies.forEach(function (reply) {
                            let replyHtml = `
                                <div class="reply mt-2 ms-4 p-2 border-bottom">
                                    <div class="d-flex">
                                        <div class="d-flex flex-column justify-content-center align-items-center flex-shrink-0 me-3 rounded-pill"
                                             style="width: 40px; height: 40px; background-color: #E9ECEF;">
                                            <h6 class="text-dark mb-0">${reply.userName.charAt(0).toUpperCase()}</h6>
                                        </div>
                                        <div class="flex-grow-1 text-start">
                                            <h6 class="text-dark mb-0">${reply.userName}</h6>
                                            <div class="text-muted small">
                                                <span>${formatCustomDateTime(reply.cDate)}</span>
                                            </div>
                                        </div>
                                    </div>
                                    <span class="text-muted small">${reply.description}</span>
                                </div>
                            `;

                            $(`#replies-${comment.id}`).append(replyHtml);
                        });
                    }
                });
            },
            error: function (e) {
                console.log(e);
            }
        });
}

        $(document).on('click', '.toggle-replies', function () {
            var target = $(this).data('target');
            var icon = $(this).find('i');


            $(target).toggleClass('d-none');


            if ($(target).hasClass('d-none')) {
                $(this).text('Cavabları göstər');
            } else {
                $(this).text('Cavabları gizlət');
            }
        });


        $('#editPortfolio').on('click', function () {
            window.location.href = '@Url.Action("AddPortfolio", "Portfolio", new { id = "__ACTIVE_ITEM_ID__" })'.replace("__ACTIVE_ITEM_ID__", GetActiveItemId());

        });

        $('#deletePortfolio').on('click', function () {
            $('#actionModalTitle').text('Silmək istədiyinizə əminisiniz?');

            $('#actionModal').modal('show');



        });
        $('#deleteButton').on('click', function () {
            let activeItemId = GetActiveItemId();
            if (activeItemId) {
                showLoading();
                $.ajax({
                    url: '@Url.Action("DeletePortfolio", "Portfolio")',
                    type: 'POST',
                    data: { id: activeItemId },
                    success: function () {
                        window.location.reload();
                    },
                    error: function (e) {
                        hideLoading();
                        console.log(e)

                    }
                });
            }
        });


        $('#portfolioCommentInput').on('input', function () {
            if ($(this).val().length === 0) {
                $('#portfolioCommentButton').prop('disabled', true);
            }
            else {
                $('#portfolioCommentButton').prop('disabled', false);
            }
        });

        $(document).on('click', '.replyComment', function () {
            let commentId = $(this).data('comment-id');
            let author = $(this).data('author-name');

            let replyHtml = `
                <div class="alert alert-secondary alert-dismissible d-flex align-items-center justify-content-between py-0 pe-0 fade show" role="alert">
                <span class="small"> @@ ${author} adlı istifadəçiyə cavab verin </span>
                  <button id="removeReply" type="button" class="btn" data-bs-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>
            `;

            $('#replyContainer').prepend(replyHtml)

            $('#portfolioCommentInput').data('reply-comment',commentId)
            $('#portfolioCommentInput').focus()

        });

        $(document).on('click', '#removeReply', function () {
            $('#portfolioCommentInput').data('reply-comment', 0);

            console.log("hereee")

        })

        $('#portfolioCommentButton').on('click', function () {
            let data = {
                portfolioId: GetActiveItemId(),
                description: $('#portfolioCommentInput').val()
            }
            let replyCommentId = $('#portfolioCommentInput').data('reply-comment');
            if (replyCommentId > 0) {
                data.ParentId = replyCommentId;
            }
            console.log(data);

             showLoading();
             $.ajax({
                 url: '@Url.Action("AddComment", "Comment", new {area=""})',
                 type: 'POST',
                 contentType: 'application/json',
                 data: JSON.stringify(data),
                 success: function () {
                     window.location.reload();
                 },
                 error: function (e) {
                     hideLoading();
                     console.log(e)
                 }
             });


        });


        $('#carouselExample').on('slid.bs.carousel', function () {
            fetchComments(GetActiveItemId());
        });

        function GetActiveItemId() {
            let activeItem = $('#carouselExample .carousel-item.active');
            let activeItemId = activeItem.attr('data-item-id')
            return +activeItemId;
        }

    </script>


}