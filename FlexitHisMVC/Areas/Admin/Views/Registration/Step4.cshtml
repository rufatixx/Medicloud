@{
    Layout = "~/Areas/Admin/Views/Shared/_BusinessLayout.cshtml";
}

@model Medicloud.ViewModels.CreateOrganizationVM
<div class="">
    <div class="row  text-center justify-content-center ">
        <div class="">
            <div class="card-header   align-items-center">
                <a class="btn btn-sm" asp-action="Step3" asp-route-organizationId="@Model.id" asp-area="Admin">
                    <svg width="32px" height="32px" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" fill="#737373">
                        <path fill="#737373" d="M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z"></path>
                        <path fill="#737373" d="m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z"></path>
                    </svg>
                </a>

                <div class="text-center flex-grow-1">
                    <h1>Ünvanınız</h1>
                    <p>Müştərilər sizi harada tapa bilər?</p>
                </div>
            </div>
            <form id="step4Form" method="post" enctype="multipart/form-data" asp-action="step5" asp-controller="registration" asp-area="admin">
                <input type="hidden" asp-for="id" />
                <input type="hidden" asp-for="latitude" id="latInp" />
                <input type="hidden" asp-for="longitude" id="longInp" />
                <input type="hidden" asp-for="OrgAddress" id="addInp" />
                <input type="hidden" asp-for="WorkPlaceType" id="addInp" />
                <div class="card-body ">
                    <div class="alert alert-danger" role="alert" id="errorMessage" style="display:none;">
                        Zəhmət olmasa ünvanınızı daxil edin.
                    </div>
                    <div class="row">
                        <div id="map" style="height: 400px;"></div>

                    </div>
                </div>

                <div class="mb-3 mb-0 text-center">
                    <button class="btn btn-primary" type="submit" id="nextButton"> Növbəti</button>
                </div>

            </form>
        </div>
    </div>
</div>


<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>

<script>

    const $form = $('#step4Form');
    const $errorMessage = $("#errorMessage");
    var modelLatitude = '@Model.latitude'; // Replace with your model's latitude value
    var modelLongitude = '@Model.longitude'; // Replace with your model's longitude value
    var modelAddress = '@Model.OrgAddress'; // Replace with your model's address value

    // Default coordinates for Baku
    var baku = [40.4093, 49.8671];

    // If the model has valid latitude and longitude, use them
    if (modelLatitude && modelLongitude && modelLatitude > 0 && modelLongitude>0) {
        console.log(modelLatitude)
        console.log(modelLongitude)
        baku = [parseFloat(modelLatitude), parseFloat(modelLongitude)];
    }

    var map = L.map('map').setView(baku, 12);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

    var currentMarker;

    // If an address is provided, set it as the initial marker's popup
    if (modelAddress) {
        console.log(modelAddress)
        currentMarker = L.marker(baku).addTo(map);
        currentMarker.bindPopup("<b>" + modelAddress + "</b>").openPopup();

        map.setZoom(16);
        map.panTo(baku);
    }

    // Geocoder search handling
    L.Control.geocoder().addTo(map).on('markgeocode', function (e) {
        var lat = e.geocode.center.lat;
        var lng = e.geocode.center.lng;
        var address = e.geocode.name;

        // Remove the current marker if it exists
        if (currentMarker) {
            map.removeLayer(currentMarker);
        }

        // Add the new marker with the new address
        currentMarker = L.marker([lat, lng]).addTo(map);
        currentMarker.bindPopup(address).openPopup();

        // Update the hidden input fields
        $('#latInp').val(lat);
        $('#longInp').val(lng);
        $('#addInp').val(address);
        $errorMessage.hide();

        //console.log($('#latInp').val());
        //console.log($('#longInp').val());
        //console.log($('#addInp').val());
    });

    // Handle map click event to update the marker
    map.on('click', function (e) {
        var lat = e.latlng.lat;
        var lng = e.latlng.lng;
        var apiUrl = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json`;

        fetch(apiUrl)
            .then(response => response.json())
            .then(data => {
                var address = data.display_name;

                // Remove the current marker if it exists
                if (currentMarker) {
                    map.removeLayer(currentMarker);
                }

                // Add the new marker with the new address
                currentMarker = L.marker([lat, lng]).addTo(map);
                currentMarker.bindPopup(address).openPopup();

                // Update the hidden input fields
                $('#latInp').val(lat);
                $('#longInp').val(lng);
                $('#addInp').val(address);
                $errorMessage.hide();

                //console.log($('#latInp').val());
                //console.log($('#longInp').val());
                //console.log($('#addInp').val());
            })
            .catch(error => {
                console.error("Error fetching address: ", error);
            });
    });




    $form.on('submit', function (event) {
        // Prevent the form from submitting immediately
        event.preventDefault();



        if (!$('#addInp').val() || !$('#longInp').val() || !$('#latInp').val()) {
            $errorMessage.show();
            return;
        }

        $form.off('submit').submit();
    });


        //var baku = [40.4093, 49.8671];

        //var map = L.map('map').setView(baku, 12);

        //L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

        //var marker = L.marker(baku).addTo(map);
        //marker.bindPopup("<b>Bakı</b><br>Azərbaycanın paytaxtı.").openPopup();
        //var currentMarker = marker;


        //L.Control.geocoder().addTo(map).on('markgeocode', function (e) {
        //    var lat = e.geocode.center.lat;
        //    var lng = e.geocode.center.lng;
        //    var address = e.geocode.name;

        //    console.log(currentMarker)
        //    if (currentMarker) {
        //        map.removeLayer(currentMarker);
        //    }


        //    currentMarker = L.marker([lat, lng]).addTo(map);
        //    currentMarker.bindPopup(address).openPopup();

        //    $('#latInp').val(lat);
        //    $('#longInp').val(lng);
        //    $('#addInp').val(address);

        //    console.log($('#latInp').val());
        //    console.log($('#longInp').val());
        //    console.log($('#addInp').val());
        //});

        //map.on('click', function (e) {
        //    var lat = e.latlng.lat;
        //    var lng = e.latlng.lng;
        //    var apiUrl = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json`;

        //    fetch(apiUrl)
        //        .then(response => response.json())
        //        .then(data => {
        //            var address = data.display_name;



        //            if (currentMarker) {
        //                map.removeLayer(currentMarker);
        //            }


        //            currentMarker = L.marker([lat, lng]).addTo(map);
        //            currentMarker.bindPopup(address).openPopup();


        //            $('#latInp').val(lat);
        //            $('#longInp').val(lng);
        //            $('#addInp').val(address);

        //            console.log($('#latInp').val());
        //            console.log($('#longInp').val());
        //            console.log($('#addInp').val());
        //        })
        //        .catch(error => {
        //            console.error("Adres alınırken bir hata oluştu: ", error);
        //        });
        //});


        //var baku = [40.4093, 49.8671];


        //var map = L.map('map').setView(baku, 12);


        //L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);


        //var marker = L.marker(baku).addTo(map);
        //marker.bindPopup("<b>Bakı</b><br>Azərbaycanın paytaxtı.").openPopup();


        //L.Control.geocoder().addTo(map);
        //var currentMarker = marker;

        //map.on('click', function (e) {
        //    var lat = e.latlng.lat;
        //    var lng = e.latlng.lng;
        //    var apiUrl = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json`;

        //    fetch(apiUrl)
        //        .then(response => response.json())
        //        .then(data => {
        //            var address = data.display_name;
        //            if (currentMarker) {
        //                map.removeLayer(currentMarker);
        //            }
        //            currentMarker = L.marker([lat, lng]).addTo(map);
        //            currentMarker.bindPopup(address).openPopup();
        //            $('#latInp').val(lat)
        //            $('#longInp').val(lng)
        //            $('#addInp').val(address)
        //            console.log($('#latInp').val())
        //            console.log($('#longInp').val())
        //            console.log($('#addInp').val())
        //            console.log($('#latInp').val())
        //        })
        //        .catch(error => {
        //            console.error("Adres alınırken bir hata oluştu: ", error);
        //        });
        //});


        //map.on('geocodingstart', function () {
        //    // Arama yapıldığında önceki marker'ı kaldır
        //    if (currentMarker) {
        //        map.removeLayer(currentMarker);
        //    }
        //});

        //map.on('geocodingfinish', function (event) {
        //    var lat = event.geocode.center.lat;
        //    var lng = event.geocode.center.lng;
        //    var address = event.geocode.name;

        //    // Yeni marker ekle
        //    currentMarker = L.marker([lat, lng]).addTo(map);
        //    currentMarker.bindPopup("<b>Seçilen Konum</b><br>" + address).openPopup();
        //});


        //var baku = [40.4093, 49.8671];

        //var map = L.map('map').setView(baku, 12);

        //L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

        //var marker = L.marker(baku).addTo(map);
        //marker.bindPopup("<b>Bakı</b><br>Azərbaycanın paytaxtı.").openPopup();

        //L.Control.geocoder().addTo(map);
        //var currentMarker = marker;

        //map.on('click', function (e) {
        //    var lat = e.latlng.lat;
        //    var lng = e.latlng.lng;
        //    var apiUrl = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json`;

        //    fetch(apiUrl)
        //        .then(response => response.json())
        //        .then(data => {
        //            var address = data.display_name;
        //            if (currentMarker) {
        //                map.removeLayer(currentMarker);
        //            }
        //            currentMarker = L.marker([lat, lng]).addTo(map);
        //            currentMarker.bindPopup(address).openPopup();
        //            $('#latInp').val(lat);
        //            $('#longInp').val(lng);
        //            $('#addInp').val(address);
        //            console.log($('#latInp').val());
        //            console.log($('#longInp').val());
        //            console.log($('#addInp').val());
        //        })
        //        .catch(error => {
        //            console.error("Adres alınırken bir hata oluştu: ", error);
        //        });
        //});







        //var baku = [40.4093, 49.8671];

        //var map = L.map('map').setView(baku, 12);

        //L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

        //var marker = L.marker(baku).addTo(map);
        //marker.bindPopup("<b>Bakı</b><br>Azərbaycanın paytaxtı.").openPopup();
        //var currentMarker = marker;
        //L.Control.geocoder().addTo(map).on('markgeocode', function (e) {
        //    var lat = e.geocode.center.lat;
        //    var lng = e.geocode.center.lng;
        //    var address = e.geocode.name;

        //    // Mevcut marker'ı kaldır
        //    if (currentMarker) {
        //        map.removeLayer(currentMarker);
        //    }
        //    // Yeni marker'ı ekle
        //    currentMarker = L.marker([lat, lng]).addTo(map);
        //    currentMarker.bindPopup(address).openPopup();
        //    $('#latInp').val(lat);
        //    $('#longInp').val(lng);
        //    $('#addInp').val(address);

        //    console.log($('#latInp').val());
        //    console.log($('#longInp').val());
        //    console.log($('#addInp').val());
        //});



        //map.on('click', function (e) {
        //    var lat = e.latlng.lat;
        //    var lng = e.latlng.lng;
        //    var apiUrl = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json`;

        //    fetch(apiUrl)
        //        .then(response => response.json())
        //        .then(data => {
        //            var address = data.display_name;
        //            if (currentMarker) {
        //                map.removeLayer(currentMarker);
        //            }
        //            currentMarker = L.marker([lat, lng]).addTo(map);
        //            currentMarker.bindPopup(address).openPopup();
        //            $('#latInp').val(lat);
        //            $('#longInp').val(lng);
        //            $('#addInp').val(address);

        //            console.log($('#latInp').val());
        //            console.log($('#longInp').val());
        //            console.log($('#addInp').val());
        //        })
        //        .catch(error => {
        //            console.error("Adres alınırken bir hata oluştu: ", error);
        //        });
        //});




</script>



<!--<div class="">
    <div class="row text-center justify-content-center">
        <div class="">
            <form id="step4Form" method="post" enctype="multipart/form-data" asp-action="step5" asp-controller="registration" asp-area="admin">
                <div class="card-header">
                    <input type="hidden" asp-for="id" />
                    <input type="hidden" asp-for="latitude" />
                    <input type="hidden" asp-for="longitude" />
                    <button class="btn btn-sm">
                        <img src="~/arrow.svg" />
                    </button>
                    <div class="text-center">
                        <h1>Addressiniz</h1>
                        <p>Müştərilər sizi harada tapa bilər?</p>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">-->
<!-- Arama inputu ve dropdown için bir alan ekleyin -->
<!--<div class="col-12 mb-3">
                            <input type="text" id="searchInput" class="form-control" placeholder="Adres arayın...">
                            <ul id="resultsDropdown" class="list-group" style="display: none; position: absolute; width: 100%; max-height: 200px; overflow-y: auto; background: white; border: 1px solid #ccc; z-index: 999;"></ul>
                        </div>
                        <div id="map" style="height: 400px;"></div>
                    </div>
                </div>
                <div>
                    <textarea id="inpLog"></textarea>
                </div>
                <div class="mb-3 mb-0 text-center">
                    <button class="btn btn-primary" type="submit" id="nextButton"> Növbəti</button>
                </div>
            </form>
        </div>
    </div>
</div>-->
@*<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>*@

<script>
    //var baku = [40.4093, 49.8671];
    //var map = L.map('map').setView(baku, 12);
    //L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);
    //var marker = L.marker(baku).addTo(map);
    //marker.bindPopup("<b>Bakı</b><br>Azərbaycanın paytaxtı.").openPopup();

    //var currentMarker = marker;

    // Geocoding arama fonksiyonu
    /*    var geocoder = new L.Control.Geocoder.Nominatim();*/

    //function searchLocation(query) {
    //    if (query.length > 3) {
    //        geocoder.geocode(query, function (results) {
    //            console.log(results)
    //            var dropdown = document.getElementById("resultsDropdown");
    //            var inpLog = document.getElementById("inpLog");
    //            inpLog.value = results;
    //            dropdown.innerHTML = ""; // Önceki sonuçları temizle

    //            if (results.length > 0) {
    //                dropdown.style.display = "block"; // Dropdown'u göster
    //                results.forEach(function (result) {
    //                    var li = document.createElement("li");
    //                    li.className = "list-group-item";
    //                    li.textContent = result.name;
    //                    li.onclick = function () {
    //                        selectResult(result);
    //                    };
    //                    dropdown.appendChild(li);
    //                });
    //            } else {
    //                dropdown.style.display = "none"; // Sonuç yoksa dropdown'u gizle
    //            }
    //        });
    //    }
    //}

    //function searchLocation(query) {
    //    var inpLog = document.getElementById("inpLog");
    //    if (query.length > 3) {
    //        console.log(query)

    //        inpLog.val = query;
    //        geocoder.geocode({ address: query }, function (results, status) {
    //            console.log(results)
    //            console.log(status)
    //            if (status === 'OK' && results.length > 0) {
    //                console.log(results);

    //                var dropdown = document.getElementById("resultsDropdown");

    //                inpLog.value = results[0].formatted_address; // assuming the first result is the most relevant

    //                // Clear previous suggestions
    //                dropdown.innerHTML = '';

    //                // Loop through results to create dropdown options
    //                results.forEach(function (result) {
    //                    var option = document.createElement("option");
    //                    option.value = result.formatted_address;
    //                    dropdown.appendChild(option);
    //                });
    //            } else {
    //                console.error('Geocode was not successful for the following reason: ' + status);
    //                // Optionally handle the case where no results are found
    //                dropdown.innerHTML = '<option>No results found</option>';
    //            }
    //        });
    //    }
    //}


    // Seçilen adresi harita üzerinde göstermek ve input'a yazmak
    //function selectResult(result) {
    //    var latLng = result.center;
    //    var address = result.name;

    //    if (currentMarker) {
    //        map.removeLayer(currentMarker);
    //    }

    //    // Yeni marker ekle
    //    currentMarker = L.marker(latLng).addTo(map);
    //    currentMarker.bindPopup("<b>Seçilen Konum</b><br>" + address).openPopup();
    //    map.setView(latLng, 12);

    //    // Input alanına adresi yaz
    //    document.getElementById('searchInput').value = address;

    //    // Dropdown'u gizle
    //    document.getElementById("resultsDropdown").style.display = "none";
    //}

    //// Input alanına yazıldıkça arama yap
    //document.getElementById('searchInput').addEventListener('input', function (event) {
    //    var query = event.target.value;
    //    console.log(query)
    //    searchLocation(query);
    //});

    // Harita tıklama olayını dinleyin
    //map.on('click', function (e) {
    //    var lat = e.latlng.lat;
    //    var lng = e.latlng.lng;
    //    var apiUrl = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json`;

    //    fetch(apiUrl)
    //        .then(response => response.json())
    //        .then(data => {
    //            var address = data.display_name;
    //            if (currentMarker) {
    //                map.removeLayer(currentMarker);
    //            }
    //            currentMarker = L.marker([lat, lng]).addTo(map);
    //            currentMarker.bindPopup(address).openPopup();

    //            // Adresi input alanına yazdır
    //            document.getElementById('searchInput').value = address;
    //        })
    //        .catch(error => {
    //            console.error("Adres alınırken bir hata oluştu: ", error);
    //        });
    //});
</script>
