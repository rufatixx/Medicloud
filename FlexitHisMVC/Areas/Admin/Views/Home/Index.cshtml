<style>
    .bg-blue-purple-gradient {
        background: linear-gradient(to right, #7bb7ff, #d4f2ff); /* Pastel blue to pastel purple */
    }
</style>

<!-- Start Content-->
<div class="container-fluid">

    <!-- start page title -->
    <div class="row">
        <div class="col-12">
            <div class="page-title-box">

                <h4 class="page-title">İnzibati idarəetmə</h4>
            </div>
        </div>
    </div>
    <!-- end page title -->


    <div class=" py-2">

        <!-- Profile -->
        <div class="card bg-blue-purple-gradient rounded-4 h-100 ">
            <div class="row px-2">
                <div class="col-md-auto flex-grow-1">
                    <div class="card-body profile-user-box d-flex flex-column">
                        <div class="row">
                            <div class="col-sm-8">
                                <div class="row align-items-center">
                                    <div class="col-auto">
                                        <div class="avatar-lg">
                                            <img src="@ViewBag.imagePath" width="86" style="object-fit:cover;" alt="" class="rounded-circle img-thumbnail">
                                        </div>
                                    </div>
                                    <div class="col">
                                        <div>
                                            <h4 class="mt-1 mb-1 text-white">@ViewBag.SelectedOrganization</h4>
                                            <ul class="mb-0 list-inline text-light">
                                                <li class="list-inline-item me-3">
                                                    <h5 class="mb-1 text-white">Ay ərzində müştəri</h5>
                                                    <p class="mb-0 font-13 text-white-50">
                                                        @{
                                                            var customersStr = ViewBag.patientStatisticsDTO?.newCustomersThisMonth?.ToString();
                                                            var isValid = int.TryParse(customersStr, out int customersInt) && customersInt != 0;
                                                        }
                                                        @(isValid ? customersStr : "0")
                                                    </p>


                                                </li>
                                                <li class="list-inline-item">
                                                    <h5 class="mb-1 text-white">Ay ərzində müraciət</h5>
                                                    <p class="mb-0 font-13 text-white-50">
                                                        @{
                                                            var visitsStr = ViewBag.patientCardStatisticsDTO?.visitsThisMonth?.ToString();
                                                             isValid = int.TryParse(visitsStr, out int visitsInt) && visitsInt != 0;
                                                        }
                                                        @(isValid ? visitsStr : "0")
                                                    </p>


                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div> <!-- end col-->
                        </div> <!-- end row -->
                    </div> <!-- end card-body/ profile-user-box-->
                </div>

                <div class="col-md-auto my-auto">

                    <div class="card rounded-4 my-auto mb-3 mb-md-0">
                        <div class="card-body d-flex flex-column justify-content-between">

                            <div>
                                <p>Ödənişli planın bitmə vaxtı</p>
                                <p>
                                    @if (ViewBag.expiredDate != null)
                                    {
                                        @ViewBag.expiredDate.ToString("dd.MM.yyyy")
                                    }
                                    else
                                    {
                                        <span>Tarix mövcud deyil</span>
                                    }
                                </p>
                            </div>
                            @{
                                if (ViewBag.expiredDate == null || ViewBag.expiredDate < DateTime.Now)
                                {
                                    <button onclick="window.location.href = '@Url.Action("Index", "Pricing")';" type="button" class="btn btn-primary">
                                        Ödənişli plana keç
                                    </button>
                                }
                                else
                                {

                                }
                            }
                        </div>
                    </div>

                </div><!--end profile/ card -->
            </div>



        </div>


        <div class="row">
            <div class="col-xl-12">

                <div class="row">
                    <div class="col-12 ">

                        @await Component.InvokeAsync("Modules", 1)

                    </div>

                </div>

            </div> <!-- end col-->
        </div>



        <!-- end row -->

    </div> <!-- container -->
</div>


<div class="modal fade" id="serviceModal" tabindex="-1" aria-labelledby="serviceModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="serviceModalLabel">Xidmətin yenilənməsi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-hidden="true"></button>
            </div>
            <div class="modal-body">
                <form id="updateServiceForm">
                    <div class="form-group mb-3">
                        <label for="serviceName">Xidmətin adı</label>
                        <input type="text" class="form-control" id="selectedServiceName" name="name" placeholder="">
                    </div>
                    <div class="form-group mb-3">
                        <label for="servicePrice">Qiymət</label>
                        <input type="number" step="0.01" class="form-control" id="selectedServicePrice" name="price" placeholder="">
                    </div>
                    <div class="d-flex justify-content-between">
                        <button type="submit" class="btn btn-primary col-5" onclick="updateService()" id="updateServiceBtn">Yenilə</button>
                        <button type="button" class="btn btn-danger col-5" id="deleteServiceBtn" onclick="updateService(false)">Sil</button>
                        <button type="button" class="btn btn-success col-5" id="addServiceBtn" onclick="addService()">Əlavə et</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="updateUserModal" tabindex="-1" aria-labelledby="serviceModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="serviceModalLabel">Məlumatların yenilənməsi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-hidden="true"></button>
            </div>
            <div class="modal-body">
                <form id="updateUserForm">
                    <div class="form-group mb-3">
                        <label for="name">Adınız</label>
                        <input type="text" class="form-control" id="name" placeholder="">
                    </div>
                    <div class="form-group mb-3">
                        <label for="surname">Soyadınız</label>
                        <input type="text" class="form-control" id="surname" placeholder="">
                    </div>
                    <div class="form-group mb-3">
                        <label for="name">Ata adı</label>
                        <input type="text" class="form-control" id="father" placeholder="">
                    </div>
                    <div class="form-group mb-3">
                        <label for="name">Elektron poçt</label>
                        <input type="text" class="form-control" id="email" placeholder="">
                    </div>
                    <div class="form-group mb-3">
                        <label for="name">Mobil nömrəniz</label>
                        <input type="text" class="form-control" id="mobile" placeholder="">
                    </div>

                    <div class="d-flex justify-content-between">
                        <button type="button" class="btn btn-primary col-5" onclick="updateUser()">Yenilə</button>

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script>
        var selectedServiceID = 0;

        $('.service-row').on('click', function () {

            const service = $(this).data('service');

            selectedServiceID = service.id;
            $('#selectedServiceName').val(service.name);
            $('#selectedServicePrice').val(service.price);

            $('#updateServiceBtn').show()
            $('#deleteServiceBtn').show()
            $('#addServiceBtn').hide()

            $('#serviceModal').modal('show');
        });

        $('#openServiceModal').on('click', function () {
            $('#serviceModal').modal('show');

            $('#updateServiceBtn').hide()
            $('#deleteServiceBtn').hide()
            $('#addServiceBtn').show()
        });
    function addService() {
        showLoading();

        var serviceName = $('#selectedServiceName').val();
        var servicePrice = $('#selectedServicePrice').val();
       var isActive = typeof isActive !== 'undefined' ? isActive : true;

        // Create the service object
        var service = {

            price: servicePrice,
            name: serviceName,
            isActive: isActive
        };

        $.ajax({
            url: '@Url.Action("InsertService", "Profile")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(service),
            success: function (response) {

                location.reload();

                window.addEventListener('beforeunload', hideLoading);
                    },
            error: function (error) {
                        alert('Error occurred while updating service:', error);
                        // Handle the error scenario appropriately
                        hideLoading();
                    }
                });
    }

     function updateService(isActive) {
        showLoading();

        var serviceName = $('#selectedServiceName').val();
         var servicePrice = $('#selectedServicePrice').val();

         // Default isActive to 1 if no value is provided
         isActive = typeof isActive !== 'undefined' ? isActive : true;

        // Create the service object
        var service = {
            ID: selectedServiceID,
            price: servicePrice,
            name: serviceName,
            isActive: isActive

        };

        $.ajax({
            url: '@Url.Action("UpdateService", "Profile")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(service),
            success: function (response) {

                location.reload();

                window.addEventListener('beforeunload', hideLoading);
                    },
            error: function (error) {
                        alert('Error occurred while updating service:', error);
                        // Handle the error scenario appropriately
                        hideLoading();
                    }
                });
     }




        $.ajax({
            url: '@Url.Action("UpdateService", "Profile")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(service),
            success: function (response) {

                location.reload();

                window.addEventListener('beforeunload', hideLoading);
                    },
            error: function (error) {
                        alert('Error occurred while updating service:', error);
                        // Handle the error scenario appropriately
                        hideLoading();
                    }
                });
    }
    </script>
}
`