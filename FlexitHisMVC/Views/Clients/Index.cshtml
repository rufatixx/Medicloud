@{
    ViewData["Title"] = "- Pasientlər / müştərilər";

}

@using Medicloud.Models.Domain;
@model List<PatientDocDTO>
<div class="row">
    <div class="col-12">
        <div class="page-title-box">
            <div class="page-title-right">
                <a href="javascript:window.print()">
                    <button type="button" class="btn btn-primary w-md bg-blue-light radius-10"><i class="ri-printer-line"></i>Çap et</button>
                </a>
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#customerInfoModal">
                    + Yeni pasient / müştəri
                </button>
            </div>

            <h2 class="page-title">Pasientlər / müştərilər</h2>
        </div>
    </div>
</div>
<div class="row ">
    <div class="col-12">
        <div class="card rounded-4">

            <div class="card-body">
                <div id="datatable_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">

                    <div class="row">
                        <div class="col-sm-12 table-responsive">

                            <table style="border: 0px; width: 1183px;" id="datatable" class="table table-striped table-borderless dt-responsive nowrap w-100 dataTable no-footer dtr-inline" role="grid" aria-describedby="datatable_info">
                                <thead>
                                    <tr role="row">
                                        <th class="text-muted" rowspan="1" colspan="1" style="width: 43px;">#</th>
                                        <th class="text-muted" rowspan="1" colspan="1" style="width: 160px;">Ad, Soyad</th>
                                        <th class="text-muted" rowspan="1" colspan="1" style="width: 199px;">Mobil Nömrə</th>
                                        <th class="text-muted" rowspan="1" colspan="1" style="width: 231px;">Cins</th>
                                        <th class="text-muted" rowspan="1" colspan="1" style="width: 231px;">Yaş</th>
                                        <th class="text-muted" rowspan="1" colspan="1" style="width: 231px;">Növbələr</th>
                                        @*<th class="text-muted" rowspan="1" colspan="1" style="width: 175px;">Seçin</th>*@
                                    </tr>
                                </thead>
                                <tbody style="vertical-align:middle; font-weight:500;">
                                    @{ var rowNumber = 0;
                                        foreach (var item in Model)
                                        {
                                            rowNumber++;

                                            <tr class="client-row" data-client='@Html.Raw(Json.Serialize(item))'>
                                                <th class="text-muted dtr-control" tabindex="0">@rowNumber</th>
                                                <td>@item.name @item.surname</td>
                                                <td>@item.phone</td>
                                                <td>
                                                    @{
                                                        if (item.genderID == 1)
                                                        {
                                                            @:Kişi
                                                        }
                                                        else
                                                        {
                                                            @:Qadın
                                                        }

                                                    }
                                                </td>
                                                @{
                                                    // Assuming @item.bdate is a DateTime object representing the person's date of birth
                                                    DateTime birthDate = @item.bDate;
                                                    DateTime today = DateTime.Today;
                                                    int age = today.Year - birthDate.Year;

                                                    // If the person hasn't had their birthday this year, subtract one year from the age
                                                    if (birthDate > today.AddYears(-age)) age--;

                                                    <td>@age</td>
                                                }
                                                <td onclick="event.stopPropagation()">
                                                    <a href="@Url.Action("Index", "Prescriptions", new { area = "", patientFullName = $"{item.name} {item.surname}", patientID = item.ID })">
                                                        aktiv növbə sayı: @item.totalCardNumbers
                                                    </a>
                                                </td>
                                                @*<td style="float: right">
                                                        <a href="patient-edit.php?patient_id=61294">
                                                            <button type="button" class="btn btn-light btn-sm edit-button" data-id="1"><i class="far fa-edit"></i></button>
                                                        </a>
                                                        <a href="javascript:void(0);" class="delete-link" data-patient-id="61294">
                                                            <button type="button" class="btn btn-light btn-sm delete-button">
                                                                <i class="far fa-trash-alt"></i>
                                                            </button>
                                                        </a>
                                                    </td>*@
                                            </tr>

                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    @*<div class="row">
                        <div class="col-sm-12 col-md-5">
                            <div class="dataTables_info" id="datatable_info" role="status" aria-live="polite">Showing 1 to 1 of 1 entries</div></div><div class="col-sm-12 col-md-7"></div></div>*@

                </div>
                <!--<div class="container mt-4" style="margin-right: 0">-->
                <!-- Pagination -->
                <!--</div>-->
            </div>
        </div>
    </div> <!-- end col -->
</div>


<!-- Modal Structure -->
<!-- Customer Information Modal -->
<div class="modal fade" id="customerInfoModal" tabindex="-1" aria-labelledby="customerInfoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content rounded-4">
            <div class="modal-header">
                <h4 class="modal-title" id="customerInfoModalLabel">Müştəri məlumatları</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addPatientForm" data-action="add" novalidate>
                <div class="modal-body p-0">

                    @await Component.InvokeAsync("NewPatient", new { hasHeader = false })
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="addClientBtn">Əlavə et</button>
                    @*<button type="button" class="btn btn-warning" id="updateClientBtn" onclick="UpdatePatient()">Yenilə</button>*@
                </div>
            </form>

        </div>
    </div>
</div>
@section Scripts{

    <script>
       document.addEventListener('DOMContentLoaded', function (){
           const $form = $('#addPatientForm');
           var selectedClientID = 0;
           $form.on('submit', function (e) {
               e.preventDefault();

               if (!$form[0].checkValidity()) {
                   $form.addClass('was-validated');
                   return;
               }
               else {

                   let data = {
                       name: $('#name').val(),
                       surname: $('#surname').val(),
                       father: $('#father').val(),
                       clientPhone: $('#clientPhone').val(),
                       clientEmail: $('#clientEmail').val(),
                       genderID: parseInt($('#gender').val()),
                       fin: $("#fin").val(),
                       birthDate: $('#bDate').val(),
                       orgReasonId: parseInt($("#orgReason").val() || 0, 10),

                   }


                   let action = $form.data('action');
                   console.log(data)

                   //console.log(action)
                   //return;
                   if (action === 'add') {
                       showLoading();
                       $.ajax({
                           type: 'POST',
                           url: `@Url.Action("AddClient", "Clients")`,
                           contentType: 'application/json',
                           data: JSON.stringify(data),
                           success: function (data) {
                               if (data > 0) {
                                   window.location.reload();
                               }
                           },
                           error: function (jqXhr, textStatus, errorMessage) {
                               hideLoading();
                               if (jqXhr.status == 401) {
                                   localStorage.clear();
                                   $('#systemModalTitle').text("Sessiyanız başa çatıb");
                                   $('#systemModalText').html(`<p id="systemModalText">Zəhmət olmasa yenidən giriş edin</p>`);
                                   $('#systemModalBtn').removeAttr("hidden");
                               }
                               else {

                                   $('#warningModal').modal("show");
                                   $('#warningText').text(jqXhr.responseText);
                               }
                           }
                       });
                   }
                   else if (action === 'update') {
                       data.id = selectedClientID;
                       showLoading();
                       $.ajax({
                           type: 'POST',
                           url: `@Url.Action("UpdateClient", "Clients")`,
                           contentType: 'application/json',
                           data: JSON.stringify(data),
                           success: function (data) {
                               if (data > 0) {
                                   window.location.reload();
                               }
                           },
                           error: function (jqXhr, textStatus, errorMessage) {
                               hideLoading();
                               if (jqXhr.status == 401) {
                                   localStorage.clear();
                                   $('#systemModalTitle').text("Sessiyanız başa çatıb");
                                   $('#systemModalText').html(`<p id="systemModalText">Zəhmət olmasa yenidən giriş edin</p>`);
                                   $('#systemModalBtn').removeAttr("hidden");
                               }
                               else {

                                   $('#warningModal').modal("show");
                                   $('#warningText').text(jqXhr.responseText);
                               }
                           }
                       });
                   }


               }

           })


           $('#customerInfoModal').on('hidden.bs.modal', function () {
               $form[0].reset();
               $form.removeClass('was-validated');
               $form.data('action', 'add');
               $('#addClientBtn').text('Əlavə et').removeClass('btn-warning').addClass('btn-primary')

           });

           $('.client-row').on('click', function () {

               const client = $(this).data('client');


               $('#name').val(client.name);
               $('#surname').val(client.surname);
               $('#father').val(client.father);
               $('#gender').val(client.genderID);
               $('#clientPhone').val(client.phone);
               $('#fin').val(client.fin);
               $('#bDate').val(client.bDate.split('T')[0]);
               $("#clientEmail").val(client.email);
               $("#orgReason").val(client.orgReasonId > 0 ? client.orgReasonId : '');


               selectedClientID = client.id;

               $('#addClientBtn').text('Yenilə').removeClass('btn-primary').addClass('btn-warning')
               $form.data('action', 'update');
               $('#customerInfoModal').modal('show');
           });

       })
    </script>

    @*<script>

                $('.client-row').on('click', function () {

                    const client = $(this).data('client');


                    $('#name').val(client.name);
                    $('#surname').val(client.surname);
                    $('#father').val(client.father);
                    $('#gender').val(client.genderID);
                    $('#clientPhone').val(client.phone);
                    $('#fin').val(client.fin);

                    $('#bDate').val(client.bDate.split('T')[0]);

                    selectedClientID = client.id;


                    $('#updateClientBtn').show()
                    $('#addClientBtn').hide()

                    $('#customerInfoModal').modal('show');
                });
            </script>

            <script>

                function showClientModal() {

                    $('#name').val("");
                    $('#surname').val("");
                    $('#father').val("");
                    $('#gender').val("");
                    $('#clientPhone').val("");
                    $('#fin').val("");

                    $('#bDate').val("");


                    $('#updateClientBtn').hide()
                    $('#addClientBtn').show()

                    $('#customerInfoModal').modal('show');
                }

            </script>
            <script>
        function AddPatient() {
                    // Fetch all the forms we want to apply custom Bootstrap validation styles to
                    var forms = document.getElementsByClassName('needs-validation');
                    // Loop over them and prevent submission
                    var validation = Array.prototype.filter.call(forms, function (form) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    });

                    if (forms[0].checkValidity()) {

                        var name = $('#name').val();
                        var surname = $('#surname').val();
                        var father = $('#father').val();
                        var phone = $('#clientPhone').val();
                        var genderID = $('#gender').val();
                        var bDate = $('#bDate').val();
                        var fin = $("#fin").val();

                        var date = new Date(bDate);
                        var isoBdate = date.toISOString();

                        showLoading();

                        $.ajax({
                            headers: {
                                "Content-Type": "application/json"
                            },
                            type: 'POST',
                            url: `@Url.Action("AddClient", "Clients")`,
                            data: JSON.stringify({
                                "name": name,
                                "surname": surname,
                                "father": father,
                                "clientPhone": phone,
                                "genderID": parseInt(genderID),
                                "fin": fin,
                                "birthDate": bDate,

                            }),
                            success: function (data, status, xhr) {

                                if (data > 0) {

                                    location.reload();

                                    window.addEventListener('beforeunload', hideLoading);

                                }
                                else {
                                    hideLoading();
                                    $('#warningModal').modal("show");
                                    $('#warningText').text('Xəta baş verdi, zəhmət olmasa biraz sonra yenidən cəht edin');
                                }


                            },
                            error: function (jqXhr, textStatus, errorMessage) {
                                hideLoading();
                                if (jqXhr.status == 401) {
                                    localStorage.clear();
                                    $('#systemModalTitle').text("Sessiyanız başa çatıb");
                                    $('#systemModalText').html(`<p id="systemModalText">Zəhmət olmasa yenidən giriş edin</p>`);
                                    $('#systemModalBtn').removeAttr("hidden");
                                }
                                else {

                                    $('#warningModal').modal("show");
                                    $('#warningText').text(jqXhr.responseText);
                                }
                            }
                        });
                    }
                }</script>
            <script>
        function UpdatePatient() {
                    // Fetch all the forms we want to apply custom Bootstrap validation styles to
                    var forms = document.getElementsByClassName('needs-validation');
                    // Loop over them and prevent submission
                    var validation = Array.prototype.filter.call(forms, function (form) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    });

                    if (forms[0].checkValidity()) {

                        var name = $('#name').val();
                        var surname = $('#surname').val();
                        var father = $('#father').val();
                        var phone = $('#clientPhone').val();
                        var genderID = $('#gender').val();
                        var bDate = $('#bDate').val();
                        var fin = $("#fin").val();

                        var date = new Date(bDate);
                        var isoBdate = date.toISOString();

                        showLoading();

                        $.ajax({
                            headers: {
                                "Content-Type": "application/json"
                            },
                            type: 'POST',
                            url: `@Url.Action("UpdateClient", "Clients")`,
                            data: JSON.stringify({
                                "id": selectedClientID,
                                "name": name,
                                "surname": surname,
                                "father": father,
                                "clientPhone": phone,
                                "genderID": parseInt(genderID),
                                "fin": fin,
                                "birthDate": bDate,

                            }),
                            success: function (data, status, xhr) {

                                if (data > 0) {

                                    location.reload();

                                    window.addEventListener('beforeunload', hideLoading);

                                }
                                else {
                                    hideLoading();
                                    $('#warningModal').modal("show");
                                    $('#warningText').text('Xəta baş verdi, zəhmət olmasa biraz sonra yenidən cəht edin');
                                }


                            },
                            error: function (jqXhr, textStatus, errorMessage) {
                                hideLoading();
                                if (jqXhr.status == 401) {
                                    localStorage.clear();
                                    $('#systemModalTitle').text("Sessiyanız başa çatıb");
                                    $('#systemModalText').html(`<p id="systemModalText">Zəhmət olmasa yenidən giriş edin</p>`);
                                    $('#systemModalBtn').removeAttr("hidden");
                                }
                                else {

                                    $('#warningModal').modal("show");
                                    $('#warningText').text(jqXhr.responseText);
                                }
                            }
                        });
                    }
                }</script>*@
}