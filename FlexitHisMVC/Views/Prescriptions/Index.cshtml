

@{
    // Determine the title based on ViewBag.patientFullname
    if (!string.IsNullOrEmpty(ViewBag.patientFullname))
    {
        // Format the title and set it in ViewData
        ViewData["Title"] = $"({ViewBag.patientFullname} - Müayinə Kartları)";
    }
    else
    {
        // Set the default title
        ViewData["Title"] = " - Müayinə Kartları";
    }
}


@using Medicloud.Models.Domain;
@model List<PatientDocDTO>


<div class="row">
    <div class="col-12">
        <div class="page-title-box">
            <div class="page-title-right">

                <a href="javascript:window.print()">
                    <button type="button" class="btn btn-primary w-md bg-blue-light radius-10"><i class="ri-printer-line"></i>Çap et</button>
                </a>


                @* <button type="reset" class="btn btn-primary w-md bg-blue radius-10" onclick=" $('#patientSearch').modal('show');">+ Yeni müayinə kartı</button> *@
                @*<button type="reset" class="btn btn-primary w-md bg-blue radius-10" onclick=" $('#patientSearch').modal('show');">+ Yeni xidmət</button>
                    <button type="reset" class="btn btn-primary w-md bg-blue radius-10" onclick=" $('#patientSearch').modal('show');">+ Yeni diagnoz</button>*@

            </div>

            <h2 class="page-title">
                @if (!string.IsNullOrEmpty(ViewBag.patientFullname))
                {
                    @($"{ViewBag.patientFullname} - Növbələr")
                }
                else
                {
                    @Html.Raw("Növbələr")
                }
            </h2>

        </div>
    </div>
</div>
<div class="row ">
    <div class="col-12">
        <div class="card  rounded-4">

            <div class="card-body">
                <div id="datatable_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">

                    <div class="row">
                        <div class="col-sm-12 table-responsive">
                            <table style="border: 0px; width: 1183px;" id="datatable" class="table table table-striped table-borderless dt-responsive nowrap w-100 dataTable no-footer dtr-inline" role="grid" aria-describedby="datatable_info">
                                <thead>
                                    <tr role="row">
                                        <th class="text-muted">#</th>
                                        <th class="text-muted">Ad, Soyad</th>
                                        <th class="text-muted">Tarix</th>
                                        @*<th class="text-muted" >Diagnoz</th>*@
                                        <th class="text-muted">Növbə nömrəsi</th>
                                        <th class="text-muted">Status</th>
                                        <th class="text-muted"></th>
                                    </tr>
                                </thead>
                                <tbody style="vertical-align:middle; font-weight:500;">
                                    @{
                                        var rowNumber = 0;
                                        foreach (var item in Model)
                                        {
                                            rowNumber++;

                                            <tr class="odd">
                                                <th class="text-muted dtr-control" tabindex="0">@rowNumber</th>
                                                <td>@item.name @item.surname</td>
                                                @*<td>@item.cDate.ToString("dd.MM.yyyy")</td>*@
                                                <td>
                                                    @{
                                                        var date = item.startDate.ToString("dd.MM.yyyy");
                                                        var startTime = item.startDate.ToString("HH:mm");
                                                        var endTime = item.endDate.ToString("HH:mm");
                                                        var formatDate = $"{date} {startTime} - {endTime}";
                                                    }
                                                    @formatDate
                                                </td>


                                                @*<td>
                                                        <a href="@Url.Action("Index", "Diagnoses", new {area="",patientFullName=$"{@item.name} {@item.surname}",patientID =item.ID})">
                                                            Bax
                                                        </a>
                                                    </td>*@
                                                <td>
                                                    <a href="@Url.Action("Index", "Services", new { area = "",cardId=$"{@item.patientCardID}"})">
                                                        № @item.patientCardID
                                                    </a>
                                                </td>
                                                <td>
                                                    @*<span class="badge @(item.finished == 1 ? "bg-info" : "bg-success")">
                                                            @(item.finished == 1 ? "Ödənilib və bağlanıb" : "Aktiv")
                                                        </span>*@
                                                    @{
                                                        string className = "";
                                                        string text = "";
                                                        if (item.finished == 1)
                                                        {
                                                            className = "bg-info";
                                                            text = "Ödənilib və bağlanıb";
                                                        }
                                                        else
                                                        {
                                                            if (item.isActive)
                                                            {
                                                                className = "bg-success";
                                                                text = "Aktiv";
                                                            }
                                                            else
                                                            {
                                                                className = "bg-danger";
                                                                text = "İmtina edilib";
                                                            }
                                                        }
                                                    }
                                                    <span class="badge @className">
                                                        @text
                                                    </span>

                                                </td>
                                                <td>
                                                    @*<button class="btn btn-sm edit-anamnesis btn-primary me-1" data-item-id="@item.id">Dəyiş</button>*@
                                                    @if (item.finished != 1 && item.isActive)
                                                    {
                                                        <button class="btn btn-sm remove-card btn-danger" data-item-id="@item.patientCardID">İmtina</button>
                                                    }

                                                </td>

                                                @*<td style="float: right">
                                                    <a href="patient-edit.php?patient_id=61294"><button type="button" class="btn btn-light btn-sm edit-button" data-id="1"><i class="far fa-edit"></i></button></a>
                                                    <a href="javascript:void(0);" class="delete-link" data-patient-id="61294">
                                                    <button type="button" class="btn btn-light btn-sm delete-button">
                                                    <i class="far fa-trash-alt"></i>
                                                    </button>
                                                    </a>
                                                    </td>*@
                                            </tr>

                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    @*<div class="row"><div class="col-sm-12 col-md-5"><div class="dataTables_info" id="datatable_info" role="status" aria-live="polite">Showing 1 to 1 of 1 entries</div></div><div class="col-sm-12 col-md-7"></div></div>*@

                </div>
                <!--<div class="container mt-4" style="margin-right: 0">-->
                <!-- Pagination -->
                <!--</div>-->
            </div>
        </div>
    </div> <!-- end col -->
</div>

@await Component.InvokeAsync("PrescriptionModal")
@await Component.InvokeAsync("SearchPatient")

@section Scripts {

    <script>

        var $requestTypeDropdown = $("#requestType");
        var $servicesDropdown = $("#services");
        var $policlinicDropdown = $("#departments");
        var $doctorDropdown = $("#doctors");
        var $refererDropdown = $("#referer");
        var $companiesDropdown = $("#companies");
        var $patientCardsDropdown = $("#patientCardSelector");
        var $newPatientContainer = $("#newPatientContainer");
        var $createCard = $("#createCard");
        var $note = $("#note");
        var selectedPatientCardID = 0;
        var selectedPatientID = 0;

        function foundPatientClicked(item) {
            $('#patientSearch').modal('hide');
            $('#prescriptionModal').modal('show');
            selectedPatientID = item.id;
            populatePatientCards(selectedPatientID);
            $("#selectedPatientForm").show()
            $("#name").prop("disabled", true);
            $("#surname").prop("disabled", true);
            $("#father").prop("disabled", true);

            $("#clientPhone").prop("disabled", true);
            $("#fin").prop("disabled", true);



            $("#bDate").prop("disabled", true);
            $(`#gender`).prop("disabled", true);


            $("#patientFullName").val(`${item.name} ${item.surname} ${item.father}`);

            var lastNine = item.phone.toString().slice(-9);
            $("#clientPhone").val(lastNine);
            $("#fin").val(item.fin);

            var today = new Date(item.bDate).toISOString().split('T')[0];

            $("#bDate").val(today);
            $(`#gender option[value="${item.genderID}"]`).attr("selected", "selected");
            //$("#gender").prop("selectedIndex", this.genderID);


            $('#patientSearch').modal('hide');

        }

        function populatePatientCards(patientID) {
            // Make an API call to fetch data for the "otherDropdown"
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetPatientCards", "Reception")",
                data: { patientID: patientID },
                success: function (response) {
                    // Clear previous options and populate the "otherDropdown"

                    $patientCardsDropdown.empty();

                    // Populate options based on the response
                    $patientCardsDropdown.append($("<option />").val("").text(`Yeni Kart`));
                    response.forEach(function (item) {
                        $patientCardsDropdown.append($("<option />").val(item.cardID).text(`Kart - ${item.cardID}`));

                    });

                    if (response.length > 0) {
                        selectedPatientCardID = response[0].id;

                    }
                },
                error: function (error) {
                    console.error('API error:', error);
                    // Handle API errors here, e.g., show an error message
                }
            });
        }


        $('#patientSearch').on('hidden.bs.modal', function () {
            $('#foundPatientsTable tbody').empty();
            $('#fullNamePattern').val('');
        });

        $('#prescriptionModal').on('hidden.bs.modal', function () {
            $('#serviceForm')[0].reset();
            $('#serviceForm').removeClass('was-validated');
        });




        $('.remove-card').on('click', function (e) {
            e.stopPropagation();
            let itemId = $(this).data('item-id');
            $('#confirmModal').data('item-id', itemId);
            $('#confirmText').text('Növbəni ləğv etmək istədiyinizə əminsiniz?');
            $('#confirmModal').modal('show');


        })

        $('#confirmModalButton').on('click', function (e) {
            e.stopPropagation();
            let itemId = $('#confirmModal').data('item-id');
            //console.log(itemId);
            showLoading();
            $.ajax({
                url: "/Prescriptions/RemoveCard",
                method: 'POST',
                data: { cardId: itemId },
                success: function (response) {
                    //console.log(response);
                    window.location.reload()
                },
                error: function (error) {
                    console.error("error: ", error);
                    hideLoading();

                }
            });

        })
    </script>



}