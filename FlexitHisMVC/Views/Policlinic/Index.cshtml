@using Medicloud.ViewModels
@model PoliclinicViewModel
@{
    ViewData["Title"] = "Kabinetim";
}

@{
    var patientList = Model.Patients
        .GroupBy(p => p.id)
        .Select(g =>
        {
            var patient = g.First();
            patient.Cards = g.SelectMany(x => x.Cards).ToList();
            return patient;
        })
        .ToList();

    var selectedPatient = patientList.FirstOrDefault(p => p.Cards.Any(c => c.id == Model.SelectedCardId));

    var lastPatientCard = selectedPatient?.Cards.FirstOrDefault(c =>
        Model.SelectedCardId > 0 ? c.id == Model.SelectedCardId : true);
    var culture = new CultureInfo("az-Az");
}



<!-- PAGE HEADER -->
<div class="container-fluid">
    <div class="row">
        <div class="col-12 py-3">
            <h4 class="mb-0">Kabinetim</h4>
        </div>
    </div>
</div>

<!-- MAIN LAYOUT: Two columns -->
<div class="row flex-nowrap" style="height: 70vh">

    <!-- LEFT SIDEBAR: Patients List -->
    <div class="col-3 border-end" style="overflow-y: auto;">
        <div class="card border-0 h-100 shadow-sm">
            <div class="card-header">
                <h5 class="mb-0">Pasientlər</h5>
            </div>
            <div class="list-group list-group-flush" id="patientListGroup">
                @if (patientList != null && patientList.Count > 0)
                {
                    foreach (var item in patientList)
                    {
                        <a href="@Url.Action("Index","Policlinic",new { id = item.Cards.First()?.id })"
                           id="patientItem-@item.id"
                           class="list-group-item list-group-item-action patient-item d-flex align-items-center @(selectedPatient?.id==item.id?"active":"")">
                            <img src="~/res/user.svg"
                                 class="img-fluid rounded-circle me-2"
                                 width="35" height="35"
                                 alt="Avatar" />
                            <span>@item.name @item.surname</span>
                        </a>
                    }
                }
                else
                {
                    <div class="list-group-item text-center text-muted">
                        Hələki pasient yoxdur
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- RIGHT SIDE: Initially shows "Please select" message; once patient is chosen, show the 3 cards -->
    <div class="col ">
        <div class="container-fluid h-100" style="overflow-y: auto;">
            <div class="row gy-3">



                <!-- PATIENT DETAILS CARD (hidden until a patient is selected) -->
                @if (selectedPatient != null)
                {
                    <div class="col-12" id="patientDetailsCard">
                        <div class="card shadow-sm">
                            <div class="card-header">
                                <h5 class="mb-0">Şəxsi məlumatlar</h5>
                            </div>
                            <div class="card-body">
                                <div class="d-flex align-items-start">
                                    <img id="patientPhoto"
                                         src="~/res/user.svg"
                                         class="img-fluid rounded-circle me-3"
                                         width="80" height="80"
                                         alt="avatar" />
                                    <div>
                                        <p class="mb-1"><strong>Adı:</strong> <span id="name">@selectedPatient.name</span></p>
                                        <p class="mb-1"><strong>Soyadı:</strong> <span id="surname">@selectedPatient.surname</span></p>
                                        <p class="mb-1"><strong>Atasının adı:</strong> <span id="father">@selectedPatient.father</span></p>
                                        <p class="mb-1"><strong>FIN:</strong> <span id="fin">@selectedPatient.fin</span></p>
                                        <p class="mb-1"><strong>Cinsi:</strong> <span id="gender">@(selectedPatient.genderID==1?"Kişi":"Qadın")</span></p>
                                        @{
                                            DateTime parsedDate;
                                            string formattedDate;
                                            if (DateTime.TryParse(selectedPatient.bDate, out parsedDate))
                                            {
                                                formattedDate = parsedDate.ToString("dd MMM yyyy", culture);
                                            }
                                            else
                                            {
                                                formattedDate = "Qeyd olunmayıb";
                                            }
                                        }
                                        <p class="mb-1"><strong>Doğum tarixi:</strong> <span id="bDate">@formattedDate</span></p>
                                        @*<p class="mb-1"><strong>Qeyd:</strong> <span id="note"></span></p>*@
                                    </div>
                                </div>
                                <div class="d-flex justify-content-end">
                                    <button class="btn btn-light" data-bs-toggle="modal" data-bs-target="#historyModal">Tarixçə</button>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="mt-0">
                        <h4 class="text-center">Növbə № @lastPatientCard?.id - Tarix: @lastPatientCard?.startDate?.ToString("dd MMM yyyy HH:mm", culture) </h4>

                        <div class="accordion mb-3" id="anamnesisAccordion">
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingAnamnesis">
                                    <button class="accordion-button d-flex justify-content-between align-items-center w-100 collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseAnamnesis" aria-expanded="false" aria-controls="collapseAnamnesis">
                                        Xəstənin Anamnezləri
                                    </button>
                                </h2>
                                <div id="collapseAnamnesis" class="accordion-collapse collapse " aria-labelledby="headingAnamnesis" data-bs-parent="#anamnesisAccordion">
                                    <div class="accordion-body">

                                        <div class="d-flex justify-content-end mb-2">
                                            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#anamnesisModal">Anamnez əlavə et</button>
                                        </div>

                                        <div class="list-group list-group-flush" style="max-height: 250px; overflow-y: auto;">
                                            @if (Model.CardAnamnesis != null)
                                            {
                                                foreach (var item in Model.CardAnamnesis)
                                                {
                                                    <div class="list-group-item p-0 border-0 anamnesis-card" data-item-id="@item.id" style="cursor:pointer;">
                                                        <div class="card position-relative">
                                                            <div class="card-body">
                                                                <h5 class="card-title">Anamnez №@item.id</h5>
                                                                <p class="card-text">
                                                                    <strong>Həkim:</strong> @item.Doctor?.name @item.Doctor?.surname<br />
                 
                                                                    <strong>Tarix:</strong> @item.createDate.ToString("dd.MM.yyyy")
                                                                </p>
                                                                <div class="position-absolute top-0 end-0 m-2">
                     
                                                                    @if (item.doctorId == int.Parse(User.FindFirst("ID").Value))
                                                                    {
                                                                        <button class="btn btn-sm edit-anamnesis btn-primary me-1" data-item-id="@item.id">Dəyiş</button>
                                                                        <button class="btn btn-sm delete-anamnesis btn-danger" data-item-id="@item.id">Sil</button>
                                                                    }

                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                            }
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>


                        @*<div class="accordion mb-3" id="diagnosessAccordion">
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingDiagnoses">
                                    <button class="accordion-button d-flex justify-content-between align-items-center w-100 collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseDiagnoses" aria-expanded="false" aria-controls="collapseDiagnoses">
                                        Xəstənin Diaqnozları
                                    </button>
                                </h2>
                                <div id="collapseDiagnoses" class="accordion-collapse collapse " aria-labelledby="headingDiagnoses" data-bs-parent="#diagnosessAccordion">
                                    <div class="accordion-body">

                                        <div class="d-flex justify-content-end mb-2">
                                            <button type="button" class="btn btn-sm btn-outline-primary"
                                                    onclick="$('#patientSearch').modal('show');">
                                                Diaqnoz əlavə et
                                            </button>
                                        </div>

                                        <div class="list-group list-group-flush" style="max-height: 250px; overflow-y: auto;">

                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>



                        <div class="accordion mb-3" id="videosAccordion">
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingVideos">
                                    <button class="accordion-button d-flex justify-content-between align-items-center w-100 collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseVideos" aria-expanded="false" aria-controls="collapseVideos">
                                        Video yazılar siyahısı
                                    </button>
                                </h2>
                                <div id="collapseVideos" class="accordion-collapse collapse " aria-labelledby="headingVideos" data-bs-parent="#videosAccordion">
                                    <div class="accordion-body">

                                        <div class="d-flex justify-content-end mb-2">
                                            <button type="button" class="btn btn-sm btn-outline-success" onclick="openVideoModal()">
                                                Yeni rekord başlat
                                            </button>
                                        </div>

                                        <div class="list-group list-group-flush" style="max-height: 250px; overflow-y: auto;">

                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>*@

                    </div>
                }
                else
                {
                    <!-- "SELECT A PATIENT" MESSAGE -->
                    <div class="col-12" id="noPatientSelectedMsg">
                        <div class="card shadow-sm">
                            <div class="card-body text-muted">
                                Zəhmət olmasa pasient seçin
                            </div>
                        </div>
                    </div>
                }



                <!-- DIAGNOSES CARD (hidden until a patient is selected) -->
                <div class="col-12" id="diagnosesCard" style="display: none;">
                    <div class="card shadow-sm">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">Xəstənin Diaqnozları</h5>
                            <button type="button" class="btn btn-sm btn-outline-primary"
                                    onclick="$('#patientSearch').modal('show');">
                                Diaqnoz əlavə et
                            </button>
                        </div>
                        <div class="list-group list-group-flush"
                             style="max-height: 250px; overflow-y: auto;"
                             id="patientDiagnoses">
                            <!-- Filled by JS once a patient is selected -->
                        </div>
                    </div>
                </div>

                <!-- VIDEO RECORDS CARD (hidden until a patient is selected) -->
                <div class="col-12" id="videoCard" style="display: none;">
                    <div class="card shadow-sm">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">Video yazılar siyahısı</h5>
                            <button type="button" class="btn btn-sm btn-outline-success" onclick="openVideoModal()">
                                Yeni rekord başlat
                            </button>
                        </div>
                        <div class="list-group list-group-flush"
                             style="max-height: 250px; overflow-y: auto;"
                             id="patientRecs">
                            <!-- Filled by JS once a patient is selected -->
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="historyModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-light text-dark">
                <h5 class="modal-title">Pasientin tarixçəsi</h5>
            </div>
            <div class="modal-body text-center">
                @if (selectedPatient != null && selectedPatient.Cards != null)
                {
                    foreach (var item in selectedPatient.Cards)
                    {
                            string className = "";
                            string text = "";
                            if (item.finished)
                            {
                                className = "bg-info";
                                text = "Ödənilib və bağlanıb";
                            }
                            else
                            {
                                if (item.isActive)
                                {
                                    className = "bg-success";
                                    text = "Aktiv";
                                }
                                else
                                {
                                    className = "bg-danger";
                                    text = "İmtina edilib";
                                }
                            }
                        

                <div class="text-start">
                    <a href="@Url.Action("Index","Policlinic",new { id = item.id })" class="link">Növbə tarixi: @item.startDate?.ToString("dd MMM yyyy HH:mm", culture)</a>
                    <span class="ms-3 badge @className">
                        @text
                    </span>
                </div>
                    }
                }

            </div>
            @*<div class="modal-footer">
                    <a class="btn btn-primary" href="/">Əsas səhifə</a>
                </div>*@
        </div>
    </div>
</div>

<div class="modal fade" id="anamnesisModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-light text-dark">
                <h5 class="modal-title" id="anamnesisModalTitle">Yeni anamnez</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center text-start">

                @if (Model.AnamnesisFields != null)
                {
                    @*foreach (var item in Model.AnamnesisFields)
                        {
                            <div class="col-md-6 text-start mb-3">
                                <label class="form-label ">@item.name</label>
                                <textarea type="text" class="form-control" id="input(@item.id)" rows="3" placeholder="@item.name daxil edin"></textarea>
                                <div class="valid-feedback">
                                    Əla!
                                </div>
                                <div class="invalid-feedback">
                                    Boşluğu doldurun.
                                </div>
                            </div>
                        }*@
                }
                <form id="anamnezForm" data-action="add" novalidate>
                    <div class="row">
                        <div class="col-md-6 text-start mb-3 anamnez-field" data-field-id="1">
                            <label class="form-label ">Şikayəti</label>
                            <textarea type="text" class="form-control answer" id="" rows="3" required placeholder="Şikayəti daxil edin"></textarea>
                            <div class="valid-feedback">
                                Əla!
                            </div>
                            <div class="invalid-feedback">
                                Boşluğu doldurun.
                            </div>
                        </div>
                        <div class="col-md-6 text-start mb-3 anamnez-field" data-field-id="2">
                            <label class="form-label ">Anamnez Kliniki Gedişat</label>
                            <textarea type="text" class="form-control answer" id="" rows="3" required placeholder="Anamnez Kliniki Gedişat daxil edin"></textarea>
                            <div class="valid-feedback">
                                Əla!
                            </div>
                            <div class="invalid-feedback">
                                Boşluğu doldurun.
                            </div>
                        </div>
                        <div class="col-md-6 text-start mb-3 anamnez-field" data-field-id="3">
                            <label class="form-label ">Öncəki xəstəliklər</label>
                            <textarea type="text" class="form-control answer" id="" rows="3" required placeholder="Öncəki xəstəliklər daxil edin"></textarea>
                            <div class="valid-feedback">
                                Əla!
                            </div>
                            <div class="invalid-feedback">
                                Boşluğu doldurun.
                            </div>
                        </div>
                        <div class="col-md-6 text-start mb-3 anamnez-field" data-field-id="4">
                            <label class="form-label ">Müayinə planı</label>
                            <textarea type="text" class="form-control answer" id="" rows="3" required placeholder="Müayinə planı daxil edin"></textarea>
                            <div class="valid-feedback">
                                Əla!
                            </div>
                            <div class="invalid-feedback">
                                Boşluğu doldurun.
                            </div>
                        </div>
                        <div class="col-md-6 text-start mb-3 anamnez-field" data-field-id="5">
                            <label class="form-label ">Tətbiq olunan müalicə</label>
                            <textarea type="text" class="form-control answer" id="" rows="3" required placeholder="Tətbiq olunan müalicə daxil edin"></textarea>
                            <div class="valid-feedback">
                                Əla!
                            </div>
                            <div class="invalid-feedback">
                                Boşluğu doldurun.
                            </div>
                        </div>
                        <div class="col-md-6 text-start mb-3 anamnez-field" data-field-id="6">
                            <label class="form-label ">Digər qeydlər</label>
                            <textarea type="text" class="form-control answer" id="" rows="3" required placeholder="Digər qeydlər daxil edin"></textarea>
                            <div class="valid-feedback">
                                Əla!
                            </div>
                            <div class="invalid-feedback">
                                Boşluğu doldurun.
                            </div>
                        </div>
                    </div>
                    <div class="col-12 d-flex justify-content-end">
                        <button class="btn btn-primary">Yadda saxla</button>
                    </div>
                </form>


            </div>
            @*<div class="modal-footer">
                    <a class="btn btn-primary" href="/">Əsas səhifə</a>
                </div>*@
        </div>
    </div>
</div>


@await Component.InvokeAsync("AnamnesisDetailModal")


<!-- NO PATIENTS MODAL (if Model.Count == 0) -->
<div class="modal fade" id="noPatientsModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title">Pasient yoxdur</h5>
            </div>
            <div class="modal-body text-center">
                Sizin hələki pasientiniz yoxdur
            </div>
            <div class="modal-footer">
                <a class="btn btn-primary" href="/">Əsas səhifə</a>
            </div>
        </div>
    </div>
</div>

<!-- DIAGNOSIS SEARCH MODAL -->
<div class="modal fade" id="patientSearch" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Diaqnoz axtarışı</h5>
                <button type="button" class="btn-close"
                        data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="icdID" class="form-label">ICD Kodu</label>
                    <input type="text" class="form-control" id="icdID" placeholder="A00 və s." />
                </div>
                <div class="mb-3">
                    <label for="diagnoseName" class="form-label">Adı</label>
                    <input type="text" class="form-control" id="diagnoseName" placeholder="Diaqnoz adı" />
                </div>
                <div class="mb-3">
                    <label for="foundDiagnoseList" class="form-label">Axtarış Nəticələri</label>
                    <select class="form-select" size="5" id="foundDiagnoseList"
                            onchange="addDiagnose(patientIDglobal, $(this).val())">
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Ləğv et</button>
                <button type="button" class="btn btn-primary" onclick="searchForDiagnose()">Axtar</button>
            </div>
        </div>
    </div>
</div>

<!-- VIDEO RECORDING MODAL -->
<div class="modal fade" id="videoModal" data-bs-backdrop="static" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Video Qeydiyyat</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"
                        aria-label="Close" onclick="stopPreview()"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="videoInputDevice" class="form-label">Kamera seçin</label>
                    <select class="form-select" id="videoInputDevice">
                        <option value="">Varsayılan Kamera</option>
                    </select>
                </div>
                <div class="text-center position-relative">
                    <video id="videoPreview" width="360" height="240"
                           autoplay muted style="background: #000;"></video>
                    <!-- Blinking "Recording..." indicator -->
                    <div id="recordIndicator"
                         style="display:none; position:absolute; top:8px; left:8px; background:rgba(255,0,0,0.7); color:#fff; padding:3px 8px; border-radius:4px; animation: blinkRecord 1s infinite;">
                        Recording...
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="startRecordingBtn" class="btn btn-primary" onclick="startVideoRecording()">Start</button>
                <button id="stopRecordingBtn" class="btn btn-danger" style="display: none;" onclick="stopVideoRecording()">Stop</button>
            </div>
        </div>
    </div>
</div>

<!-- KEYFRAMES FOR BLINKING THE RECORDING INDICATOR -->
<style>
    @@keyframes blinkRecord {
        0% {
            opacity: 1;
        }

        50% {
            opacity: 0;
        }

        100% {
            opacity: 1;
        }
    }
</style>

@{
    // If zero patients, show "No Patients" modal automatically
    if (Model.Patients == null || Model.Patients.Count == 0)
    {
        <script>
            $(document).ready(function () {
                $("#noPatientsModal").modal("show");
            });</script>
        ;
    }
    else
    {
        // Full JS for Diagnoses, Video, etc.
        <script>
            var patientIDglobal = null;
            var stream = null;
            var mediaRecorder = null;
            var recordedBlobs = [];
            var counter = 1;

            // ========== NO AUTO SELECTION ==========
            // The user must click a patient. Then we hide the "select patient" message,
            // show the 3 hidden cards, and fill them.

            function showPatientDetails(pid) {
                $(".patient-item").removeClass("active");
                $("#patientItem-" + pid).addClass("active");

                // Hide the "please select patient" card
                $("#noPatientSelectedMsg").hide();

                // Show the hidden cards
                $("#patientDetailsCard").show();
                $("#diagnosesCard").show();
                $("#videoCard").show();

                // Fill data from the Razor Model
                $.each(@Html.Raw(Json.Serialize(@Model)), function() {
                    if (this.id === pid) {
                        patientIDglobal = pid;

                        $("#name").text(this.name || "");
                        $("#surname").text(this.surname || "");
                        $("#father").text(this.father || "");
                        $("#fin").text(this.fin || "");
                        $("#gender").text(this.genderID === 1 ? "Kişi" : "Qadın");

                        if (this.bDate) {
                            let datePart = this.bDate.split('T')[0];
                            let d = new Date(datePart);
                            let day = String(d.getDate()).padStart(2, '0');
                            let month = String(d.getMonth() + 1).padStart(2, '0');
                            let year = d.getFullYear();
                            $("#bDate").text(`${day}.${month}.${year}`);
                        } else {
                            $("#bDate").text("--");
                        }
                        $("#note").text(this.note || "");

                        // Now fetch diagnoses & records
                        getDiagnoses(pid);
                        getRecords(pid);
                    }
                });
            }

            // ========== DIAGNOSES ==========
            function getDiagnoses(pid) {
                $("#patientDiagnoses").empty();
                $.ajax({
                    type: "GET",
                    url: "/Policlinic/GetDiagnoses",
                    data: { patientID: pid },
                    success: function(data) {
                        if (Array.isArray(data)) {
                            data.forEach(function(d) {
                                $("#patientDiagnoses").append(`
                                    <div class="list-group-item d-flex justify-content-between align-items-center">
                                        <div><strong>${d.icdID}</strong> - ${d.name}</div>
                                        <a class="text-danger" href="javascript:void(0);" onclick="deleteDiagnose(${d.id});">Sil</a>
                                    </div>
                                `);
                            });
                        }
                    },
                    error: function() {
                        alert("Xəta: Diaqnozlar yüklənmədi.");
                    }
                });
            }

            function searchForDiagnose() {
                let icdID = $("#icdID").val() || "";
                let diagnoseName = $("#diagnoseName").val() || "";
                $.ajax({
                    type: "GET",
                    url: "/Policlinic/SearchDiagnose",
                    data: { icdID, name: diagnoseName },
                    success: function(data) {
                        $("#foundDiagnoseList").empty();
                        if (Array.isArray(data)) {
                            data.forEach(function(item) {
                                $("#foundDiagnoseList").append(
                                    $("<option />").val(item.id).text(`(${item.icdID}) ${item.name}`)
                                );
                            });
                        }
                    },
                    error: function() {
                        alert("Axtarış alınmadı.");
                    }
                });
            }

            function addDiagnose(pid, diagnoseID) {
                if (!diagnoseID) return;
                $.ajax({
                    type: "GET",
                    url: "/Policlinic/AddDiagnose",
                    data: { patientID: pid, diagnoseID },
                    success: function() {
                        getDiagnoses(pid);
                    },
                    error: function() {
                        alert("Diagnoz əlavə edilmədi.");
                    }
                });
            }

            function deleteDiagnose(patientDiagnoseRelID) {
                $.ajax({
                    type: "GET",
                    url: "/Policlinic/DeleteDiagnose",
                    data: { patientDiagnoseRelID },
                    success: function() {
                        getDiagnoses(patientIDglobal);
                    },
                    error: function() {
                        alert("Diagnoz silinmədi.");
                    }
                });
            }

            // ========== VIDEO RECORDS ==========
            function getRecords(pid) {
                $("#patientRecs").empty();
                $.ajax({
                    type: "GET",
                    url: "/Policlinic/GetRecords",
                    data: { patientID: pid },
                    success: function(data) {
                        if (Array.isArray(data)) {
                            data.forEach(function(r) {
                                $("#patientRecs").append(`
                                    <div class="list-group-item d-flex justify-content-between align-items-center">
                                        <a href="${r.path}" target="_blank">${r.name}</a>
                                        <a class="text-danger" href="javascript:void(0);" onclick="deleteRecord(${r.patientRecRellID});">Sil</a>
                                    </div>
                                `);
                            });
                        }
                    },
                    error: function() {
                        alert("Xəta: Video rekordlar yüklənmədi.");
                    }
                });
            }

            function deleteRecord(patientRecID) {
                $.ajax({
                    type: "GET",
                    url: "/Policlinic/DeleteRec",
                    data: { patientRecRelID: patientRecID },
                    success: function() {
                        getRecords(patientIDglobal);
                    },
                    error: function() {
                        alert("Video silinmədi.");
                    }
                });
            }

            // ========== VIDEO RECORDING ==========
            function openVideoModal() {
                $("#videoModal").modal("show");
                // Reset
                $("#startRecordingBtn").show();
                $("#stopRecordingBtn").hide();
                $("#recordIndicator").hide();
                recordedBlobs = [];

                // Enumerate cameras, then start preview
                enumerateVideoDevices();
                startPreview();
            }

            function enumerateVideoDevices() {
                if (!navigator.mediaDevices?.enumerateDevices) return;
                let selectElem = $("#videoInputDevice");
                selectElem.empty();
                selectElem.append(new Option("Varsayılan Kamera", ""));

                navigator.mediaDevices.enumerateDevices()
                    .then(devices => {
                        devices.forEach(device => {
                            if (device.kind === "videoinput") {
                                let label = device.label || `Kamera ${selectElem[0].length+1}`;
                                let opt = new Option(label, device.deviceId);
                                selectElem.append(opt);
                            }
                        });
                    })
                    .catch(err => console.error("Enumerate devices error:", err));
            }

            function startPreview() {
                stopPreview();
                let selectedDeviceId = $("#videoInputDevice").val();
                let constraints = {
                    audio: true,
                    video: { deviceId: selectedDeviceId ? { exact: selectedDeviceId } : undefined }
                };
                navigator.mediaDevices.getUserMedia(constraints)
                    .then(str => {
                        stream = str;
                        let videoPreview = document.getElementById("videoPreview");
                        videoPreview.srcObject = stream;
                        videoPreview.play();
                    })
                    .catch(err => {
                        console.error("startPreview error:", err);
                        alert("Kamera və/ya mikrofon icazəsi verilmədi.");
                    });
            }

            function stopPreview() {
                if (stream) {
                    stream.getTracks().forEach(track => track.stop());
                }
                stream = null;
                document.getElementById("videoPreview").srcObject = null;
            }

            function startVideoRecording() {
                if (!stream) {
                    alert("Kamera tapılmadı, xahiş olunur icazə verin və ya cihaz seçin.");
                    return;
                }
                recordedBlobs = [];
                let options = { mimeType: "video/webm;codecs=vp9" };
                mediaRecorder = new MediaRecorder(stream, options);

                mediaRecorder.ondataavailable = e => {
                    if (e.data && e.data.size > 0) {
                        recordedBlobs.push(e.data);
                    }
                };
                mediaRecorder.onstart = () => {
                    $("#recordIndicator").show();
                };
                mediaRecorder.onerror = e => {
                    console.error("MediaRecorder error:", e.error);
                    alert("MediaRecorder error: " + e.error?.message);
                };
                mediaRecorder.onstop = handleRecordingStop;

                mediaRecorder.start(1000); // gather ~1s chunks
                $("#startRecordingBtn").hide();
                $("#stopRecordingBtn").show();
            }

            function stopVideoRecording() {
                if (mediaRecorder && mediaRecorder.state !== "inactive") {
                    mediaRecorder.stop();
                }
                $("#recordIndicator").hide();
                $("#startRecordingBtn").show();
                $("#stopRecordingBtn").hide();
            }

            function handleRecordingStop() {
                console.log("Recording stopped, uploading...");
                const blob = new Blob(recordedBlobs, { type: "video/webm" });
                const formData = new FormData();
                formData.append("videoFile", blob, `recorded-video-${counter}.webm`);
                formData.append("patientID", patientIDglobal);
                counter++;

                // Simple overlay while uploading
                const backdrop = $('<div class="modal-backdrop fade show"></div>').appendTo(document.body);
                const loader = $(`
                    <div class="d-flex justify-content-center align-items-center position-fixed w-100 h-100"
                         style="top:0;left:0;z-index:9999;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Yüklənir...</span>
                        </div>
                    </div>
                `).appendTo(document.body);

                $.ajax({
                    type: "POST",
                    url: "/Policlinic/UploadVideo",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function() {
                        backdrop.remove();
                        loader.remove();
                        alert("Video uğurla yükləndi.");
                        getRecords(patientIDglobal);
                    },
                    error: function() {
                        backdrop.remove();
                        loader.remove();
                        alert("Video yüklənmədi, zəhmət olmasa yenidən cəhd edin.");
                    }
                });
            }
        </script>
        ;
    }
}


@section Scripts {

    <script>
        document.addEventListener('DOMContentLoaded', function () {

            $anamnezForm = $('#anamnezForm');

            $anamnezForm.on('submit', function (e) {
                e.preventDefault();

                //if (!$anamnezForm[0].checkValidity()) {
                //    $anamnezForm.addClass('was-validated')
                //    return;
                //} else {

                var data = {};
                data.cardId='@Model.SelectedCardId'
                answers = [];
                var isAnyAnswerFilled = false;

                    $("#anamnezForm .anamnez-field").each(function () {
                        var fieldID = $(this).data("field-id");
                        var answerText = $(this).find(".answer").val();

                        if (answerText.trim() !== "") {
                            isAnyAnswerFilled = true;
                        }

                        answers.push({
                            anamnesisFieldId: fieldID,
                            answerText: answerText || ""
                        });
                    });

                if (!isAnyAnswerFilled) {
                    $('#infoText').text('Zəhmət olmasa ən azı bir sahəni doldurun');
                    $('#infoModal').modal('show');
                    return;
                }




                data.fields = answers


                let action = $(this).data('action');
                let itemId = $(this).data('item-id');

                if (action === 'add') {
                    //console.log(data)
                    //return;
                    showLoading();

                    $.ajax({
                        type: "POST",
                        url: "/Policlinic/AddAnamnesis",
                        contentType: "application/json",
                        data: JSON.stringify(data),
                        success: function (response) {
                            if (response > 0) {
                                window.location.reload();
                            }
                        },
                        error: function (xhr) {
                            //alert("error: " + xhr.responseText);
                            hideLoading();
                        }
                    });
                    return;
                }
                else if (action == 'update') {
                    data.id = itemId;
                    //console.log(data)
                    //return;
                    showLoading();

                    $.ajax({
                        type: "POST",
                        url: "/Policlinic/UpdateAnamnesis",
                        contentType: "application/json",
                        data: JSON.stringify(data),
                        success: function (response) {
                            if (response > 0) {
                                window.location.reload();
                            }
                        },
                        error: function (xhr) {
                            //alert("error: " + xhr.responseText);
                            hideLoading();
                        }
                    });

                }             

                //}
            })


            function fillDetailAnamnesis(response) {
                if (response) {
                    response.anamnesisAnswers.forEach(function (item) {
                        var fieldId = item.anamnesisFieldId;
                        var text = item.answerText || '';

                        var label = $("#anamnesisDetailModal .anamnez-field[data-field-id='" + fieldId + "'] .form-control");
                        if (label.attr('id')) {
                            label.text(text);
                        }
                    });

                    $("#anamnesisDetailModal .anamnez-field .form-control").each(function () {
                        var label = $(this);
                        if (label.attr('id') && !label.text().trim()) {
                            label.text('');
                        }
                    });

                    $("#anamnesisDetailTitle").text("Anamnez Detalları");

                    $('#anamnesisDetailModal').modal('show');
                    hideLoading();
                }
            }

            function fillEditAnamnesis(response) {
                if (response) {

                    const answers = response.anamnesisAnswers || [];

                    answers.forEach(function (item) {
                        var fieldId = item.anamnesisFieldId;
                        var text = item.answerText || '';

                        // Formda həmin field-id-ə uyğun sahəni tapırıq
                        var input = $("#anamnezForm .anamnez-field[data-field-id='" + fieldId + "'] .answer");
                        if (input.length > 0) {
                            input.val(text);
                        }
                    });

                    $("#anamnesisModalTitle").text("Redaktə et");
                    $('#anamnesisModal').modal('show'); 
                    $anamnezForm.data('action', 'update');
                    $anamnezForm.data('item-id', response.id);
                    hideLoading();
                } else {
                }
            }


            $('.anamnesis-card').on('click', function () {
                let itemId = $(this).data('item-id');
                loadAnamnesisData(itemId, fillDetailAnamnesis);
            })

            $('.edit-anamnesis').on('click', function (e) {
                e.stopPropagation();
                let itemId = $(this).data('item-id');
                loadAnamnesisData(itemId, fillEditAnamnesis);
            })



            function loadAnamnesisData(id,callback) {
                showLoading();
                $.ajax({
                    url: "/Policlinic/GetAnamnesisById",
                    method: 'GET',
                    data: { id: id },
                    success: function (response) {
                        console.log(response);
                        callback(response)

                    },
                    error: function (error) {
                        console.error("error: ", error);
                        hideLoading();

                    }
                });
            }


            $('#anamnesisDetailModal').on('hidden.bs.modal', function () {
                $("#anamnesisDetailModal .anamnez-field[data-field-id]").each(function () {
                    var label = $(this).find(".form-control");
                    label.text('');

                });
            });

            $('#anamnesisModal').on('hidden.bs.modal', function () {
                $("#anamnesisModalTitle").text("Yeni anamnez");
                $anamnezForm[0].reset();
                $anamnezForm.data('action','add');
            });


            $('.delete-anamnesis').on('click', function (e) {
                e.stopPropagation();
                let itemId = $(this).data('item-id');
                $('#confirmModal').data('item-id', itemId);
                $('#confirmText').text('Ananmezi silmək istədiyinizə əminsiniz?');
                $('#confirmModal').modal('show');
                

            })

            $('#confirmModalButton').on('click', function (e) {
                e.stopPropagation();
                let itemId = $('#confirmModal').data('item-id');

                showLoading();
                $.ajax({
                    url: "/Policlinic/DeleteAnamnesis",
                    method: 'POST',
                    data: { anamnesisId: itemId },
                    success: function (response) {
                        //console.log(response);
                        window.location.reload()
                    },
                    error: function (error) {
                        console.error("error: ", error);
                        hideLoading();

                    }
                });

            })
            

        })

    </script>
}